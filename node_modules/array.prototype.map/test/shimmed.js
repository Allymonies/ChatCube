require('../auto');

var test = require('tape');
var defineProperties = require('define-properties');
var callBind = require('call-bind');
var hasStrictMode = require('has-strict-mode')();

var isEnumerable = Object.prototype.propertyIsEnumerable;
var functionsHaveNames = require('functions-have-names')();

var runTests = require('./tests');

test('shimmed', function (t) ***REMOVED***
	t.equal(Array.prototype.map.length, 1, 'Array#map has a length of 1');
	t.test('Function name', ***REMOVED*** skip: !functionsHaveNames ***REMOVED***, function (st) ***REMOVED***
		st.equal(Array.prototype.map.name, 'map', 'Array#map has name "map"');
		st.end();
	***REMOVED***);

	t.test('enumerability', ***REMOVED*** skip: !defineProperties.supportsDescriptors ***REMOVED***, function (et) ***REMOVED***
		et.equal(false, isEnumerable.call(Array.prototype, 'map'), 'Array#map is not enumerable');
		et.end();
	***REMOVED***);

	t.test('bad array/this value', ***REMOVED*** skip: !hasStrictMode ***REMOVED***, function (st) ***REMOVED***
		st['throws'](function () ***REMOVED*** return Array.prototype.map.call(undefined, 'a'); ***REMOVED***, TypeError, 'undefined is not an object');
		st['throws'](function () ***REMOVED*** return Array.prototype.map.call(null, 'a'); ***REMOVED***, TypeError, 'null is not an object');
		st.end();
	***REMOVED***);

	t.test('receiver boxing', function (st) ***REMOVED***
		st.plan(hasStrictMode ? 3 : 2);

		var context = 'x';

		Array.prototype.map.call(
			'f',
			function () ***REMOVED***
				st.equal(typeof this, 'object');
				st.equal(String.prototype.toString.call(this), context);
			***REMOVED***,
			context
		);

		st.test('strict mode', ***REMOVED*** skip: !hasStrictMode ***REMOVED***, function (sst) ***REMOVED***
			sst.plan(2);

			Array.prototype.map.call(
				'f',
				function () ***REMOVED***
					'use strict';

					sst.equal(typeof this, 'string');
					sst.equal(this, context);
				***REMOVED***,
				context
			);
			sst.end();
		***REMOVED***);

		st.end();
	***REMOVED***);

	runTests(callBind(Array.prototype.map), t);

	t.end();
***REMOVED***);
