"use strict";
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
exports.refreshUserAccessToken = exports.getUserAccessToken = exports.getAppAccessToken = exports.InvalidTokenTypeError = exports.InvalidTokenError = exports.StaticAuthProvider = exports.RefreshableAuthProvider = exports.ClientCredentialsAuthProvider = exports.TokenInfo = exports.revokeToken = exports.refreshUserToken = exports.getValidTokenFromProvider = exports.getTokenInfo = exports.getAppToken = exports.exchangeCode = exports.AccessToken = void 0;
var AccessToken_1 = require("./AccessToken");
Object.defineProperty(exports, "AccessToken", ***REMOVED*** enumerable: true, get: function () ***REMOVED*** return AccessToken_1.AccessToken; ***REMOVED*** ***REMOVED***);
var helpers_1 = require("./helpers");
Object.defineProperty(exports, "exchangeCode", ***REMOVED*** enumerable: true, get: function () ***REMOVED*** return helpers_1.exchangeCode; ***REMOVED*** ***REMOVED***);
Object.defineProperty(exports, "getAppToken", ***REMOVED*** enumerable: true, get: function () ***REMOVED*** return helpers_1.getAppToken; ***REMOVED*** ***REMOVED***);
Object.defineProperty(exports, "getTokenInfo", ***REMOVED*** enumerable: true, get: function () ***REMOVED*** return helpers_1.getTokenInfo; ***REMOVED*** ***REMOVED***);
Object.defineProperty(exports, "getValidTokenFromProvider", ***REMOVED*** enumerable: true, get: function () ***REMOVED*** return helpers_1.getValidTokenFromProvider; ***REMOVED*** ***REMOVED***);
Object.defineProperty(exports, "refreshUserToken", ***REMOVED*** enumerable: true, get: function () ***REMOVED*** return helpers_1.refreshUserToken; ***REMOVED*** ***REMOVED***);
Object.defineProperty(exports, "revokeToken", ***REMOVED*** enumerable: true, get: function () ***REMOVED*** return helpers_1.revokeToken; ***REMOVED*** ***REMOVED***);
var TokenInfo_1 = require("./TokenInfo");
Object.defineProperty(exports, "TokenInfo", ***REMOVED*** enumerable: true, get: function () ***REMOVED*** return TokenInfo_1.TokenInfo; ***REMOVED*** ***REMOVED***);
var ClientCredentialsAuthProvider_1 = require("./AuthProvider/ClientCredentialsAuthProvider");
Object.defineProperty(exports, "ClientCredentialsAuthProvider", ***REMOVED*** enumerable: true, get: function () ***REMOVED*** return ClientCredentialsAuthProvider_1.ClientCredentialsAuthProvider; ***REMOVED*** ***REMOVED***);
var RefreshableAuthProvider_1 = require("./AuthProvider/RefreshableAuthProvider");
Object.defineProperty(exports, "RefreshableAuthProvider", ***REMOVED*** enumerable: true, get: function () ***REMOVED*** return RefreshableAuthProvider_1.RefreshableAuthProvider; ***REMOVED*** ***REMOVED***);
var StaticAuthProvider_1 = require("./AuthProvider/StaticAuthProvider");
Object.defineProperty(exports, "StaticAuthProvider", ***REMOVED*** enumerable: true, get: function () ***REMOVED*** return StaticAuthProvider_1.StaticAuthProvider; ***REMOVED*** ***REMOVED***);
var InvalidTokenError_1 = require("./Errors/InvalidTokenError");
Object.defineProperty(exports, "InvalidTokenError", ***REMOVED*** enumerable: true, get: function () ***REMOVED*** return InvalidTokenError_1.InvalidTokenError; ***REMOVED*** ***REMOVED***);
var InvalidTokenTypeError_1 = require("./Errors/InvalidTokenTypeError");
Object.defineProperty(exports, "InvalidTokenTypeError", ***REMOVED*** enumerable: true, get: function () ***REMOVED*** return InvalidTokenTypeError_1.InvalidTokenTypeError; ***REMOVED*** ***REMOVED***);
// twitch-auth@^1 compat
var legacy_1 = require("./legacy");
Object.defineProperty(exports, "getAppAccessToken", ***REMOVED*** enumerable: true, get: function () ***REMOVED*** return legacy_1.getAppAccessToken; ***REMOVED*** ***REMOVED***);
Object.defineProperty(exports, "getUserAccessToken", ***REMOVED*** enumerable: true, get: function () ***REMOVED*** return legacy_1.getUserAccessToken; ***REMOVED*** ***REMOVED***);
Object.defineProperty(exports, "refreshUserAccessToken", ***REMOVED*** enumerable: true, get: function () ***REMOVED*** return legacy_1.refreshUserAccessToken; ***REMOVED*** ***REMOVED***);
