'use strict';

var test = require('tape');
var isArguments = require('../');
var hasToStringTag = require('has-tostringtag/shams')();

test('primitives', function (t) ***REMOVED***
	t.notOk(isArguments([]), 'array is not arguments');
	t.notOk(isArguments(***REMOVED******REMOVED***), 'object is not arguments');
	t.notOk(isArguments(''), 'empty string is not arguments');
	t.notOk(isArguments('foo'), 'string is not arguments');
	t.notOk(isArguments(***REMOVED*** length: 2 ***REMOVED***), 'naive array-like is not arguments');
	t.end();
***REMOVED***);

test('arguments object', function (t) ***REMOVED***
	t.ok(isArguments(arguments), 'arguments is arguments');
	t.notOk(isArguments(Array.prototype.slice.call(arguments)), 'sliced arguments is not arguments');
	t.end();
***REMOVED***);

test('old-style arguments object', function (t) ***REMOVED***
	var isLegacyArguments = isArguments.isLegacyArguments || isArguments;
	var fakeOldArguments = ***REMOVED***
		callee: function () ***REMOVED******REMOVED***,
		length: 3
	***REMOVED***;
	t.ok(isLegacyArguments(fakeOldArguments), 'old-style arguments is arguments');
	t.end();
***REMOVED***);

test('Symbol.toStringTag', ***REMOVED*** skip: !hasToStringTag ***REMOVED***, function (t) ***REMOVED***
	var obj = ***REMOVED******REMOVED***;
	obj[Symbol.toStringTag] = 'Arguments';
	t.notOk(isArguments(obj), 'object with faked toStringTag is not arguments');

	var args = (function () ***REMOVED***
		return arguments;
	***REMOVED***());
	args[Symbol.toStringTag] = 'Arguments';
	t.notOk(isArguments(obj), 'real arguments with faked toStringTag is not arguments');

	t.end();
***REMOVED***);
