'use strict';

var GetIntrinsic = require('get-intrinsic');

var $TypeError = GetIntrinsic('%TypeError%');

var regexExec = require('call-bind/callBound')('RegExp.prototype.exec');

var Call = require('./Call');
var Get = require('./Get');
var IsCallable = require('./IsCallable');
var Type = require('./Type');

// https://ecma-international.org/ecma-262/6.0/#sec-regexpexec

module.exports = function RegExpExec(R, S) ***REMOVED***
	if (Type(R) !== 'Object') ***REMOVED***
		throw new $TypeError('Assertion failed: `R` must be an Object');
	***REMOVED***
	if (Type(S) !== 'String') ***REMOVED***
		throw new $TypeError('Assertion failed: `S` must be a String');
	***REMOVED***
	var exec = Get(R, 'exec');
	if (IsCallable(exec)) ***REMOVED***
		var result = Call(exec, R, [S]);
		if (result === null || Type(result) === 'Object') ***REMOVED***
			return result;
		***REMOVED***
		throw new $TypeError('"exec" method must return `null` or an Object');
	***REMOVED***
	return regexExec(R, S);
***REMOVED***;
