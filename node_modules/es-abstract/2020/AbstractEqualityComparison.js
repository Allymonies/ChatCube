'use strict';

var StrictEqualityComparison = require('./StrictEqualityComparison');
var StringToBigInt = require('./StringToBigInt');
var ToNumber = require('./ToNumber');
var ToPrimitive = require('./ToPrimitive');
var Type = require('./Type');

var isNaN = require('../helpers/isNaN');

// https://ecma-international.org/ecma-262/11.0/#sec-abstract-equality-comparison

module.exports = function AbstractEqualityComparison(x, y) ***REMOVED***
	var xType = Type(x);
	var yType = Type(y);
	if (xType === yType) ***REMOVED***
		return StrictEqualityComparison(x, y);
	***REMOVED***
	if (x == null && y == null) ***REMOVED***
		return true;
	***REMOVED***
	if (xType === 'Number' && yType === 'String') ***REMOVED***
		return AbstractEqualityComparison(x, ToNumber(y));
	***REMOVED***
	if (xType === 'String' && yType === 'Number') ***REMOVED***
		return AbstractEqualityComparison(ToNumber(x), y);
	***REMOVED***
	if (xType === 'BigInt' && yType === 'String') ***REMOVED***
		var n = StringToBigInt(y);
		if (isNaN(n)) ***REMOVED***
			return false;
		***REMOVED***
		return AbstractEqualityComparison(x, n);
	***REMOVED***
	if (xType === 'String' && yType === 'BigInt') ***REMOVED***
		return AbstractEqualityComparison(y, x);
	***REMOVED***
	if (xType === 'Boolean') ***REMOVED***
		return AbstractEqualityComparison(ToNumber(x), y);
	***REMOVED***
	if (yType === 'Boolean') ***REMOVED***
		return AbstractEqualityComparison(x, ToNumber(y));
	***REMOVED***
	if ((xType === 'String' || xType === 'Number' || xType === 'BigInt' || xType === 'Symbol') && yType === 'Object') ***REMOVED***
		return AbstractEqualityComparison(x, ToPrimitive(y));
	***REMOVED***
	if (xType === 'Object' && (yType === 'String' || yType === 'Number' || yType === 'BigInt' || yType === 'Symbol')) ***REMOVED***
		return AbstractEqualityComparison(ToPrimitive(x), y);
	***REMOVED***
	if ((xType === 'BigInt' && yType === 'Number') || (xType === 'Number' && yType === 'BigInt')) ***REMOVED***
		if (isNaN(x) || isNaN(y) || x === Infinity || y === Infinity || x === -Infinity || y === -Infinity) ***REMOVED***
			return false;
		***REMOVED***
		return x == y; // eslint-disable-line eqeqeq
	***REMOVED***
	return false;
***REMOVED***;
