'use strict';

var GetIntrinsic = require('get-intrinsic');

var $ObjectCreate = GetIntrinsic('%Object.create%', true);
var $TypeError = GetIntrinsic('%TypeError%');
var $SyntaxError = GetIntrinsic('%SyntaxError%');

var Type = require('./Type');

var hasProto = !(***REMOVED*** __proto__: null ***REMOVED*** instanceof Object);

// https://ecma-international.org/ecma-262/6.0/#sec-objectcreate

module.exports = function ObjectCreate(proto, internalSlotsList) ***REMOVED***
	if (proto !== null && Type(proto) !== 'Object') ***REMOVED***
		throw new $TypeError('Assertion failed: `proto` must be null or an object');
	***REMOVED***
	var slots = arguments.length < 2 ? [] : internalSlotsList;
	if (slots.length > 0) ***REMOVED***
		throw new $SyntaxError('es-abstract does not yet support internal slots');
	***REMOVED***

	if ($ObjectCreate) ***REMOVED***
		return $ObjectCreate(proto);
	***REMOVED***
	if (hasProto) ***REMOVED***
		return ***REMOVED*** __proto__: proto ***REMOVED***;
	***REMOVED***

	if (proto === null) ***REMOVED***
		throw new $SyntaxError('native Object.create support is required to create null objects');
	***REMOVED***
	var T = function T() ***REMOVED******REMOVED***;
	T.prototype = proto;
	return new T();
***REMOVED***;
