'use strict';

var ToNumber = require('./ToNumber');
var ToPrimitive = require('./ToPrimitive');
var Type = require('./Type');

// https://ecma-international.org/ecma-262/6.0/#sec-abstract-equality-comparison

module.exports = function AbstractEqualityComparison(x, y) ***REMOVED***
	var xType = Type(x);
	var yType = Type(y);
	if (xType === yType) ***REMOVED***
		return x === y; // ES6+ specified this shortcut anyways.
	***REMOVED***
	if (x == null && y == null) ***REMOVED***
		return true;
	***REMOVED***
	if (xType === 'Number' && yType === 'String') ***REMOVED***
		return AbstractEqualityComparison(x, ToNumber(y));
	***REMOVED***
	if (xType === 'String' && yType === 'Number') ***REMOVED***
		return AbstractEqualityComparison(ToNumber(x), y);
	***REMOVED***
	if (xType === 'Boolean') ***REMOVED***
		return AbstractEqualityComparison(ToNumber(x), y);
	***REMOVED***
	if (yType === 'Boolean') ***REMOVED***
		return AbstractEqualityComparison(x, ToNumber(y));
	***REMOVED***
	if ((xType === 'String' || xType === 'Number' || xType === 'Symbol') && yType === 'Object') ***REMOVED***
		return AbstractEqualityComparison(x, ToPrimitive(y));
	***REMOVED***
	if (xType === 'Object' && (yType === 'String' || yType === 'Number' || yType === 'Symbol')) ***REMOVED***
		return AbstractEqualityComparison(ToPrimitive(x), y);
	***REMOVED***
	return false;
***REMOVED***;
