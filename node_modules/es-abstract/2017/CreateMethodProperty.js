'use strict';

var GetIntrinsic = require('get-intrinsic');

var $TypeError = GetIntrinsic('%TypeError%');

var DefineOwnProperty = require('../helpers/DefineOwnProperty');

var FromPropertyDescriptor = require('./FromPropertyDescriptor');
var IsDataDescriptor = require('./IsDataDescriptor');
var IsPropertyKey = require('./IsPropertyKey');
var SameValue = require('./SameValue');
var Type = require('./Type');

// https://ecma-international.org/ecma-262/6.0/#sec-createmethodproperty

module.exports = function CreateMethodProperty(O, P, V) ***REMOVED***
	if (Type(O) !== 'Object') ***REMOVED***
		throw new $TypeError('Assertion failed: Type(O) is not Object');
	***REMOVED***

	if (!IsPropertyKey(P)) ***REMOVED***
		throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');
	***REMOVED***

	var newDesc = ***REMOVED***
		'[[Configurable]]': true,
		'[[Enumerable]]': false,
		'[[Value]]': V,
		'[[Writable]]': true
	***REMOVED***;
	return DefineOwnProperty(
		IsDataDescriptor,
		SameValue,
		FromPropertyDescriptor,
		O,
		P,
		newDesc
	);
***REMOVED***;
