'use strict';

var GetIntrinsic = require('get-intrinsic');

var callBound = require('call-bind/callBound');

var $TypeError = GetIntrinsic('%TypeError%');
var $indexOf = callBound('Array.prototype.indexOf', true) || callBound('String.prototype.indexOf');
var $push = callBound('Array.prototype.push');

var Get = require('./Get');
var IsArray = require('./IsArray');
var LengthOfArrayLike = require('./LengthOfArrayLike');
var ToString = require('./ToString');
var Type = require('./Type');

// https://262.ecma-international.org/11.0/#sec-createlistfromarraylike

module.exports = function CreateListFromArrayLike(obj) ***REMOVED***
	var elementTypes = arguments.length > 1
		? arguments[1]
		: ['Undefined', 'Null', 'Boolean', 'String', 'Symbol', 'Number', 'Object'];

	if (Type(obj) !== 'Object') ***REMOVED***
		throw new $TypeError('Assertion failed: `obj` must be an Object');
	***REMOVED***
	if (!IsArray(elementTypes)) ***REMOVED***
		throw new $TypeError('Assertion failed: `elementTypes`, if provided, must be an array');
	***REMOVED***
	var len = LengthOfArrayLike(obj);
	var list = [];
	var index = 0;
	while (index < len) ***REMOVED***
		var indexName = ToString(index);
		var next = Get(obj, indexName);
		var nextType = Type(next);
		if ($indexOf(elementTypes, nextType) < 0) ***REMOVED***
			throw new $TypeError('item type ' + nextType + ' is not a valid elementType');
		***REMOVED***
		$push(list, next);
		index += 1;
	***REMOVED***
	return list;
***REMOVED***;
