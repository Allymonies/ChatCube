'use strict';

var GetIntrinsic = require('get-intrinsic');
var callBound = require('call-bind/callBound');

var $TypeError = GetIntrinsic('%TypeError%');

var $push = callBound('Array.prototype.push');

var IsArray = require('./IsArray');

var isByteValue = require('../helpers/isByteValue');

// https://ecma-international.org/ecma-262/12.0/#sec-bytelistbitwiseop

module.exports = function ByteListBitwiseOp(op, xBytes, yBytes) ***REMOVED***
	if (op !== '&' && op !== '^' && op !== '|') ***REMOVED***
		throw new $TypeError('Assertion failed: `op` must be `&`, `^`, or `|`');
	***REMOVED***
	if (!IsArray(xBytes) || !IsArray(yBytes) || xBytes.length !== yBytes.length) ***REMOVED***
		throw new $TypeError('Assertion failed: `xBytes` and `yBytes` must be same-length sequences of byte values (an integer 0-255, inclusive)');
	***REMOVED***

	var result = [];

	for (var i = 0; i < xBytes.length; i += 1) ***REMOVED***
		var xByte = xBytes[i];
		var yByte = yBytes[i];
		if (!isByteValue(xByte) || !isByteValue(yByte)) ***REMOVED***
			throw new $TypeError('Assertion failed: `xBytes` and `yBytes` must be same-length sequences of byte values (an integer 0-255, inclusive)');
		***REMOVED***
		var resultByte;
		if (op === '&') ***REMOVED***
			resultByte = xByte & yByte;
		***REMOVED*** else if (op === '^') ***REMOVED***
			resultByte = xByte ^ yByte;
		***REMOVED*** else ***REMOVED***
			resultByte = xByte | yByte;
		***REMOVED***
		$push(result, resultByte);
	***REMOVED***

	return result;
***REMOVED***;
