'use strict';

const ***REMOVED*** tokenChars ***REMOVED*** = require('./validation');

/**
 * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.
 *
 * @param ***REMOVED***String***REMOVED*** header The field value of the header
 * @return ***REMOVED***Set***REMOVED*** The subprotocol names
 * @public
 */
function parse(header) ***REMOVED***
  const protocols = new Set();
  let start = -1;
  let end = -1;
  let i = 0;

  for (i; i < header.length; i++) ***REMOVED***
    const code = header.charCodeAt(i);

    if (end === -1 && tokenChars[code] === 1) ***REMOVED***
      if (start === -1) start = i;
    ***REMOVED*** else if (
      i !== 0 &&
      (code === 0x20 /* ' ' */ || code === 0x09) /* '\t' */
    ) ***REMOVED***
      if (end === -1 && start !== -1) end = i;
    ***REMOVED*** else if (code === 0x2c /* ',' */) ***REMOVED***
      if (start === -1) ***REMOVED***
        throw new SyntaxError(`Unexpected character at index $***REMOVED***i***REMOVED***`);
      ***REMOVED***

      if (end === -1) end = i;

      const protocol = header.slice(start, end);

      if (protocols.has(protocol)) ***REMOVED***
        throw new SyntaxError(`The "$***REMOVED***protocol***REMOVED***" subprotocol is duplicated`);
      ***REMOVED***

      protocols.add(protocol);
      start = end = -1;
    ***REMOVED*** else ***REMOVED***
      throw new SyntaxError(`Unexpected character at index $***REMOVED***i***REMOVED***`);
    ***REMOVED***
  ***REMOVED***

  if (start === -1 || end !== -1) ***REMOVED***
    throw new SyntaxError('Unexpected end of input');
  ***REMOVED***

  const protocol = header.slice(start, i);

  if (protocols.has(protocol)) ***REMOVED***
    throw new SyntaxError(`The "$***REMOVED***protocol***REMOVED***" subprotocol is duplicated`);
  ***REMOVED***

  protocols.add(protocol);
  return protocols;
***REMOVED***

module.exports = ***REMOVED*** parse ***REMOVED***;
