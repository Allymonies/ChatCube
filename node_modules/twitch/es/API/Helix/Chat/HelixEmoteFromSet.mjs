import ***REMOVED*** __awaiter, __decorate, __extends, __generator ***REMOVED*** from "tslib";
import ***REMOVED*** Enumerable ***REMOVED*** from '@d-fischer/shared-utils';
import ***REMOVED*** rtfm ***REMOVED*** from 'twitch-common';
import ***REMOVED*** HelixEmote ***REMOVED*** from "./HelixEmote.mjs";
/**
 * A Twitch Channel emote.
 *
 * @inheritDoc
 */
var HelixEmoteFromSet = /** @class */ (function (_super) ***REMOVED***
    __extends(HelixEmoteFromSet, _super);
    function HelixEmoteFromSet(data, client) ***REMOVED***
        var _this = _super.call(this, data) || this;
        _this._client = client;
        return _this;
    ***REMOVED***
    Object.defineProperty(HelixEmoteFromSet.prototype, "type", ***REMOVED***
        /**
         * The type of the emote.
         *
         * Known values are: `subscriptions`, `bitstier`, `follower`, `rewards`, `globals`, `smilies`, `prime`, `limitedtime`.
         *
         * This list may be non-exhaustive.
         */
        get: function () ***REMOVED***
            return this._data.emote_type;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixEmoteFromSet.prototype, "emoteSetId", ***REMOVED***
        /**
         * The ID of the emote set the emote is part of.
         */
        get: function () ***REMOVED***
            return this._data.emote_set_id;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixEmoteFromSet.prototype, "ownerId", ***REMOVED***
        /**
         * The ID of the user that owns the emote, or null if the emote is not owned by a user.
         */
        get: function () ***REMOVED***
            switch (this._data.owner_id) ***REMOVED***
                case '0':
                case 'twitch': ***REMOVED***
                    return null;
                ***REMOVED***
                default: ***REMOVED***
                    return this._data.owner_id;
                ***REMOVED***
            ***REMOVED***
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    /**
     * Retrieves more info about the user that owns the emote, or null if the emote is not owned by a user.
     */
    HelixEmoteFromSet.prototype.getOwner = function () ***REMOVED***
        return __awaiter(this, void 0, Promise, function () ***REMOVED***
            return __generator(this, function (_a) ***REMOVED***
                switch (this._data.owner_id) ***REMOVED***
                    case '0':
                    case 'twitch': ***REMOVED***
                        return [2 /*return*/, null];
                    ***REMOVED***
                    default: ***REMOVED***
                        return [2 /*return*/, this._client.helix.users.getUserById(this._data.owner_id)];
                    ***REMOVED***
                ***REMOVED***
                return [2 /*return*/];
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    __decorate([
        Enumerable(false)
    ], HelixEmoteFromSet.prototype, "_client", void 0);
    HelixEmoteFromSet = __decorate([
        rtfm('twitch', 'HelixEmoteFromSet', 'id')
    ], HelixEmoteFromSet);
    return HelixEmoteFromSet;
***REMOVED***(HelixEmote));
export ***REMOVED*** HelixEmoteFromSet ***REMOVED***;
