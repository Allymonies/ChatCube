import ***REMOVED*** __awaiter, __decorate, __generator ***REMOVED*** from "tslib";
import ***REMOVED*** Enumerable ***REMOVED*** from '@d-fischer/shared-utils';
import ***REMOVED*** rtfm ***REMOVED*** from 'twitch-common';
/**
 * A relation of a user following a broadcaster.
 */
var HelixFollow = /** @class */ (function () ***REMOVED***
    /** @private */
    function HelixFollow(data, client) ***REMOVED***
        this._data = data;
        this._client = client;
    ***REMOVED***
    Object.defineProperty(HelixFollow.prototype, "userId", ***REMOVED***
        /**
         * The user ID of the following user.
         */
        get: function () ***REMOVED***
            return this._data.from_id;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixFollow.prototype, "userName", ***REMOVED***
        /**
         * The name of the following user.
         */
        get: function () ***REMOVED***
            return this._data.from_login;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixFollow.prototype, "userDisplayName", ***REMOVED***
        /**
         * The display name of the following user.
         */
        get: function () ***REMOVED***
            return this._data.from_name;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    /**
     * Retrieves the data of the following user.
     */
    HelixFollow.prototype.getUser = function () ***REMOVED***
        return __awaiter(this, void 0, Promise, function () ***REMOVED***
            return __generator(this, function (_a) ***REMOVED***
                return [2 /*return*/, this._client.helix.users.getUserById(this._data.from_id)];
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    Object.defineProperty(HelixFollow.prototype, "followedUserId", ***REMOVED***
        /**
         * The user ID of the followed broadcaster.
         */
        get: function () ***REMOVED***
            return this._data.to_id;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixFollow.prototype, "followedUserName", ***REMOVED***
        /**
         * The name of the followed user.
         */
        get: function () ***REMOVED***
            return this._data.to_login;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixFollow.prototype, "followedUserDisplayName", ***REMOVED***
        /**
         * The display name of the followed user.
         */
        get: function () ***REMOVED***
            return this._data.to_name;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    /**
     * Retrieves the data of the followed broadcaster.
     */
    HelixFollow.prototype.getFollowedUser = function () ***REMOVED***
        return __awaiter(this, void 0, Promise, function () ***REMOVED***
            return __generator(this, function (_a) ***REMOVED***
                return [2 /*return*/, this._client.helix.users.getUserById(this._data.to_id)];
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    Object.defineProperty(HelixFollow.prototype, "followDate", ***REMOVED***
        /**
         * The date when the user followed the broadcaster.
         */
        get: function () ***REMOVED***
            return new Date(this._data.followed_at);
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    __decorate([
        Enumerable(false)
    ], HelixFollow.prototype, "_data", void 0);
    __decorate([
        Enumerable(false)
    ], HelixFollow.prototype, "_client", void 0);
    HelixFollow = __decorate([
        rtfm('twitch', 'HelixFollow')
    ], HelixFollow);
    return HelixFollow;
***REMOVED***());
export ***REMOVED*** HelixFollow ***REMOVED***;
