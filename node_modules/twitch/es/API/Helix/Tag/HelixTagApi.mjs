import ***REMOVED*** __awaiter, __decorate, __extends, __generator ***REMOVED*** from "tslib";
import ***REMOVED*** TwitchApiCallType ***REMOVED*** from 'twitch-api-call';
import ***REMOVED*** rtfm ***REMOVED*** from 'twitch-common';
import ***REMOVED*** BaseApi ***REMOVED*** from "../../BaseApi.mjs";
import ***REMOVED*** HelixPaginatedRequest ***REMOVED*** from "../HelixPaginatedRequest.mjs";
import ***REMOVED*** createPaginatedResult ***REMOVED*** from "../HelixPaginatedResult.mjs";
import ***REMOVED*** makePaginationQuery ***REMOVED*** from "../HelixPagination.mjs";
import ***REMOVED*** HelixTag ***REMOVED*** from "./HelixTag.mjs";
/**
 * The Helix API methods that deal with tags.
 *
 * Can be accessed using `client.helix.tags` on an ***REMOVED***@ApiClient***REMOVED*** instance.
 *
 * ## Example
 * ```ts
 * const api = new ApiClient(new StaticAuthProvider(clientId, accessToken));
 * const tags = await api.helix.tags.getAllStreamTags();
 * ```
 */
var HelixTagApi = /** @class */ (function (_super) ***REMOVED***
    __extends(HelixTagApi, _super);
    function HelixTagApi() ***REMOVED***
        return _super !== null && _super.apply(this, arguments) || this;
    ***REMOVED***
    /**
     * Retrieves all stream tags.
     *
     * @param pagination
     *
     * @expandParams
     */
    HelixTagApi.prototype.getAllStreamTags = function (pagination) ***REMOVED***
        if (pagination === void 0) ***REMOVED*** pagination = ***REMOVED******REMOVED***; ***REMOVED***
        return __awaiter(this, void 0, Promise, function () ***REMOVED***
            var result;
            return __generator(this, function (_a) ***REMOVED***
                switch (_a.label) ***REMOVED***
                    case 0: return [4 /*yield*/, this._client.callApi(***REMOVED***
                            type: TwitchApiCallType.Helix,
                            url: 'tags/streams',
                            query: makePaginationQuery(pagination)
                        ***REMOVED***)];
                    case 1:
                        result = _a.sent();
                        return [2 /*return*/, createPaginatedResult(result, HelixTag)];
                ***REMOVED***
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    /**
     * Creates a paginator for all stream tags.
     */
    HelixTagApi.prototype.getAllStreamTagsPaginated = function () ***REMOVED***
        return new HelixPaginatedRequest(***REMOVED***
            url: 'tags/streams'
    ***REMOVED*** this._client, function (data) ***REMOVED*** return new HelixTag(data); ***REMOVED***);
    ***REMOVED***;
    /**
     * Retrieves a set of stream tags by IDs.
     *
     * @param ids The IDs of the stream tags.
     */
    HelixTagApi.prototype.getStreamTagsByIds = function (ids) ***REMOVED***
        return __awaiter(this, void 0, Promise, function () ***REMOVED***
            var result;
            return __generator(this, function (_a) ***REMOVED***
                switch (_a.label) ***REMOVED***
                    case 0:
                        if (!ids.length) ***REMOVED***
                            return [2 /*return*/, []];
                        ***REMOVED***
                        return [4 /*yield*/, this._client.callApi(***REMOVED***
                                type: TwitchApiCallType.Helix,
                                url: 'tags/streams',
                                query: ***REMOVED***
                                    tag_id: ids
                                ***REMOVED***
                            ***REMOVED***)];
                    case 1:
                        result = _a.sent();
                        return [2 /*return*/, result.data.map(function (data) ***REMOVED*** return new HelixTag(data); ***REMOVED***)];
                ***REMOVED***
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    /**
     * Retrieves a single stream tag by ID.
     *
     * @param id The ID of the stream tag.
     */
    HelixTagApi.prototype.getStreamTagById = function (id) ***REMOVED***
        return __awaiter(this, void 0, Promise, function () ***REMOVED***
            var tags;
            return __generator(this, function (_a) ***REMOVED***
                switch (_a.label) ***REMOVED***
                    case 0: return [4 /*yield*/, this.getStreamTagsByIds([id])];
                    case 1:
                        tags = _a.sent();
                        return [2 /*return*/, tags.length ? tags[0] : null];
                ***REMOVED***
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    HelixTagApi = __decorate([
        rtfm('twitch', 'HelixTagApi')
    ], HelixTagApi);
    return HelixTagApi;
***REMOVED***(BaseApi));
export ***REMOVED*** HelixTagApi ***REMOVED***;
