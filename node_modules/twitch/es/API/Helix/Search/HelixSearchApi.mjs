import ***REMOVED*** __assign, __awaiter, __decorate, __extends, __generator ***REMOVED*** from "tslib";
import ***REMOVED*** TwitchApiCallType ***REMOVED*** from 'twitch-api-call';
import ***REMOVED*** rtfm ***REMOVED*** from 'twitch-common';
import ***REMOVED*** BaseApi ***REMOVED*** from "../../BaseApi.mjs";
import ***REMOVED*** HelixGame ***REMOVED*** from "../Game/HelixGame.mjs";
import ***REMOVED*** HelixPaginatedRequest ***REMOVED*** from "../HelixPaginatedRequest.mjs";
import ***REMOVED*** createPaginatedResult ***REMOVED*** from "../HelixPaginatedResult.mjs";
import ***REMOVED*** makePaginationQuery ***REMOVED*** from "../HelixPagination.mjs";
import ***REMOVED*** HelixChannelSearchResult ***REMOVED*** from "./HelixChannelSearchResult.mjs";
/**
 * The Helix API methods that run searches.
 *
 * Can be accessed using `client.helix.search` on an ***REMOVED***@ApiClient***REMOVED*** instance.
 *
 * ## Example
 * ```ts
 * const api = new ApiClient(new StaticAuthProvider(clientId, accessToken));
 * const channels = await api.helix.search.searchChannels('pear');
 * ```
 */
var HelixSearchApi = /** @class */ (function (_super) ***REMOVED***
    __extends(HelixSearchApi, _super);
    function HelixSearchApi() ***REMOVED***
        return _super !== null && _super.apply(this, arguments) || this;
    ***REMOVED***
    /**
     * Search categories/games for an exact or partial match.
     *
     * @param query The search term.
     * @param pagination
     *
     * @expandParams
     */
    HelixSearchApi.prototype.searchCategories = function (query, pagination) ***REMOVED***
        if (pagination === void 0) ***REMOVED*** pagination = ***REMOVED******REMOVED***; ***REMOVED***
        return __awaiter(this, void 0, Promise, function () ***REMOVED***
            var result;
            return __generator(this, function (_a) ***REMOVED***
                switch (_a.label) ***REMOVED***
                    case 0: return [4 /*yield*/, this._client.callApi(***REMOVED***
                            type: TwitchApiCallType.Helix,
                            url: 'search/categories',
                            query: __assign(***REMOVED*** query: query ***REMOVED***, makePaginationQuery(pagination))
                        ***REMOVED***)];
                    case 1:
                        result = _a.sent();
                        return [2 /*return*/, createPaginatedResult(result, HelixGame, this._client)];
                ***REMOVED***
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    /**
     * Creates a paginator for a category/game search.
     *
     * @param query The search term.
     */
    HelixSearchApi.prototype.searchCategoriesPaginated = function (query) ***REMOVED***
        var _this = this;
        return new HelixPaginatedRequest(***REMOVED***
            url: 'search/categories',
            query: ***REMOVED***
                query: query
            ***REMOVED***
    ***REMOVED*** this._client, function (data) ***REMOVED*** return new HelixGame(data, _this._client); ***REMOVED***);
    ***REMOVED***;
    /**
     * Search channels for an exact or partial match.
     *
     * @param query The search term.
     * @param filter
     *
     * @expandParams
     */
    HelixSearchApi.prototype.searchChannels = function (query, filter) ***REMOVED***
        var _a;
        if (filter === void 0) ***REMOVED*** filter = ***REMOVED******REMOVED***; ***REMOVED***
        return __awaiter(this, void 0, Promise, function () ***REMOVED***
            var result;
            return __generator(this, function (_b) ***REMOVED***
                switch (_b.label) ***REMOVED***
                    case 0: return [4 /*yield*/, this._client.callApi(***REMOVED***
                            type: TwitchApiCallType.Helix,
                            url: 'search/channels',
                            query: __assign(***REMOVED*** query: query, live_only: (_a = filter.liveOnly) === null || _a === void 0 ? void 0 : _a.toString() ***REMOVED***, makePaginationQuery(filter))
                        ***REMOVED***)];
                    case 1:
                        result = _b.sent();
                        return [2 /*return*/, createPaginatedResult(result, HelixChannelSearchResult, this._client)];
                ***REMOVED***
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    /**
     * Creates a paginator for a channel search.
     *
     * @param query The search term.
     * @param filter
     *
     * @expandParams
     */
    HelixSearchApi.prototype.searchChannelsPaginated = function (query, filter) ***REMOVED***
        var _this = this;
        var _a;
        if (filter === void 0) ***REMOVED*** filter = ***REMOVED******REMOVED***; ***REMOVED***
        return new HelixPaginatedRequest(***REMOVED***
            url: 'search/channels',
            query: ***REMOVED***
                query: query,
                live_only: (_a = filter.liveOnly) === null || _a === void 0 ? void 0 : _a.toString()
            ***REMOVED***
    ***REMOVED*** this._client, function (data) ***REMOVED*** return new HelixChannelSearchResult(data, _this._client); ***REMOVED***);
    ***REMOVED***;
    HelixSearchApi = __decorate([
        rtfm('twitch', 'HelixSearchApi')
    ], HelixSearchApi);
    return HelixSearchApi;
***REMOVED***(BaseApi));
export ***REMOVED*** HelixSearchApi ***REMOVED***;
