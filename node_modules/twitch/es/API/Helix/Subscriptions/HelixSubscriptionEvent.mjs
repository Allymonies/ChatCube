import ***REMOVED*** __decorate, __extends ***REMOVED*** from "tslib";
import ***REMOVED*** rtfm ***REMOVED*** from 'twitch-common';
import ***REMOVED*** HelixSubscription ***REMOVED*** from "./HelixSubscription.mjs";
/**
 * The different types a subscription event can have.
 */
export var HelixSubscriptionEventType;
(function (HelixSubscriptionEventType) ***REMOVED***
    /**
     * Sent when a new user subscribes.
     */
    HelixSubscriptionEventType["Subscribe"] = "subscriptions.subscribe";
    /**
     * Sent when a previous subscriber stops subscribing.
     */
    HelixSubscriptionEventType["Unsubscribe"] = "subscriptions.unsubscribe";
    /**
     * Sent when a new or recurring subscriber sends their monthly notification.
     */
    HelixSubscriptionEventType["Notification"] = "subscriptions.notification";
***REMOVED***)(HelixSubscriptionEventType || (HelixSubscriptionEventType = ***REMOVED******REMOVED***));
/**
 * An event that indicates the change of a subscription status, i.e. subscribing, unsubscribing or sending the monthly notification.
 */
var HelixSubscriptionEvent = /** @class */ (function (_super) ***REMOVED***
    __extends(HelixSubscriptionEvent, _super);
    /** @private */
    function HelixSubscriptionEvent(eventData, client) ***REMOVED***
        var _this = _super.call(this, eventData.event_data, client) || this;
        _this._eventData = eventData;
        return _this;
    ***REMOVED***
    Object.defineProperty(HelixSubscriptionEvent.prototype, "eventId", ***REMOVED***
        /**
         * The unique ID of the subscription event.
         */
        get: function () ***REMOVED***
            return this._eventData.id;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixSubscriptionEvent.prototype, "eventType", ***REMOVED***
        /**
         * The type of the subscription event.
         */
        get: function () ***REMOVED***
            return this._eventData.event_type;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixSubscriptionEvent.prototype, "eventDate", ***REMOVED***
        /**
         * The date of the subscription event.
         */
        get: function () ***REMOVED***
            return new Date(this._eventData.event_timestamp);
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixSubscriptionEvent.prototype, "eventVersion", ***REMOVED***
        /**
         * The version of the subscription event.
         */
        get: function () ***REMOVED***
            return this._eventData.version;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixSubscriptionEvent.prototype, "eventMessage", ***REMOVED***
        /**
         * The message sent with the subscription event.
         */
        get: function () ***REMOVED***
            var _a;
            return (_a = this._eventData.event_data.message) !== null && _a !== void 0 ? _a : '';
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    HelixSubscriptionEvent = __decorate([
        rtfm('twitch', 'HelixSubscriptionEvent', 'userId')
    ], HelixSubscriptionEvent);
    return HelixSubscriptionEvent;
***REMOVED***(HelixSubscription));
export ***REMOVED*** HelixSubscriptionEvent ***REMOVED***;
