import ***REMOVED*** __awaiter, __decorate, __extends, __generator ***REMOVED*** from "tslib";
import ***REMOVED*** Enumerable ***REMOVED*** from '@d-fischer/shared-utils';
import ***REMOVED*** rtfm ***REMOVED*** from 'twitch-common';
import ***REMOVED*** HelixBan ***REMOVED*** from "./HelixBan.mjs";
/**
 * The different types a ban event can have.
 */
export var HelixBanEventType;
(function (HelixBanEventType) ***REMOVED***
    /**
     * Sent when a user gets banned.
     */
    HelixBanEventType["Ban"] = "moderation.user.ban";
    /**
     * Sent when a user gets unbanned.
     */
    HelixBanEventType["Unban"] = "moderation.user.unban";
***REMOVED***)(HelixBanEventType || (HelixBanEventType = ***REMOVED******REMOVED***));
/**
 * An event that indicates the change of a ban status, i.e. banning or unbanning a user.
 *
 * @inheritDoc
 */
var HelixBanEvent = /** @class */ (function (_super) ***REMOVED***
    __extends(HelixBanEvent, _super);
    /** @private */
    function HelixBanEvent(eventData, client) ***REMOVED***
        var _this = _super.call(this, eventData.event_data, client) || this;
        _this._eventData = eventData;
        return _this;
    ***REMOVED***
    Object.defineProperty(HelixBanEvent.prototype, "eventId", ***REMOVED***
        /**
         * The unique ID of the ban event.
         */
        get: function () ***REMOVED***
            return this._eventData.id;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixBanEvent.prototype, "eventType", ***REMOVED***
        /**
         * The type of the ban event.
         */
        get: function () ***REMOVED***
            return this._eventData.event_type;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixBanEvent.prototype, "eventDate", ***REMOVED***
        /**
         * The date of the ban event.
         */
        get: function () ***REMOVED***
            return new Date(this._eventData.event_timestamp);
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixBanEvent.prototype, "eventVersion", ***REMOVED***
        /**
         * The version of the ban event.
         */
        get: function () ***REMOVED***
            return this._eventData.version;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixBanEvent.prototype, "broadcasterId", ***REMOVED***
        /**
         * The id of the broadcaster from whose chat the user was banned/unbanned.
         */
        get: function () ***REMOVED***
            return this._eventData.event_data.broadcaster_id;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixBanEvent.prototype, "broadcasterName", ***REMOVED***
        /**
         * The name of the broadcaster from whose chat the user was banned/unbanned.
         */
        get: function () ***REMOVED***
            return this._eventData.event_data.broadcaster_login;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixBanEvent.prototype, "broadcasterDisplayName", ***REMOVED***
        /**
         * The display name of the broadcaster from whose chat the user was banned/unbanned.
         */
        get: function () ***REMOVED***
            return this._eventData.event_data.broadcaster_name;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    /**
     * Retrieves more information about the broadcaster.
     */
    HelixBanEvent.prototype.getBroadcaster = function () ***REMOVED***
        return __awaiter(this, void 0, Promise, function () ***REMOVED***
            return __generator(this, function (_a) ***REMOVED***
                return [2 /*return*/, this._client.helix.users.getUserById(this._eventData.event_data.broadcaster_id)];
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    __decorate([
        Enumerable(false)
    ], HelixBanEvent.prototype, "_eventData", void 0);
    HelixBanEvent = __decorate([
        rtfm('twitch', 'HelixBanEvent', 'userId')
    ], HelixBanEvent);
    return HelixBanEvent;
***REMOVED***(HelixBan));
export ***REMOVED*** HelixBanEvent ***REMOVED***;
