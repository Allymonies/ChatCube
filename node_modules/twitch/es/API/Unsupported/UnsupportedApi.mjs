import ***REMOVED*** __awaiter, __decorate, __extends, __generator ***REMOVED*** from "tslib";
import ***REMOVED*** Cacheable, Cached ***REMOVED*** from '@d-fischer/cache-decorators';
import ***REMOVED*** TwitchApiCallType ***REMOVED*** from 'twitch-api-call';
import ***REMOVED*** extractUserName, rtfm ***REMOVED*** from 'twitch-common';
import ***REMOVED*** BaseApi ***REMOVED*** from "../BaseApi.mjs";
import ***REMOVED*** ChattersList ***REMOVED*** from "./ChattersList.mjs";
/**
 * Different API methods that are not officially supported by Twitch.
 *
 * Can be accessed using `client.unsupported` on an ***REMOVED***@ApiClient***REMOVED*** instance.
 *
 * ## Example
 * ```ts
 * const api = new ApiClient(new StaticAuthProvider(clientId, accessToken));
 * const events = await api.unsupported.getChatters('yourfavoritestreamer');
 * ```
 */
var UnsupportedApi = /** @class */ (function (_super) ***REMOVED***
    __extends(UnsupportedApi, _super);
    function UnsupportedApi() ***REMOVED***
        return _super !== null && _super.apply(this, arguments) || this;
    ***REMOVED***
    /**
     * Retrieves a list of chatters in the Twitch chat of the given channel.
     *
     * **WARNING:** In contrast to most other methods, this takes a channel *name*, not a user ID.
     *
     * @param channel The channel to retrieve the chatters for.
     */
    UnsupportedApi.prototype.getChatters = function (channel) ***REMOVED***
        return __awaiter(this, void 0, Promise, function () ***REMOVED***
            var channelName, data;
            return __generator(this, function (_a) ***REMOVED***
                switch (_a.label) ***REMOVED***
                    case 0:
                        channelName = extractUserName(channel);
                        return [4 /*yield*/, this._client.callApi(***REMOVED***
                                url: "https://tmi.twitch.tv/group/user/" + channelName + "/chatters",
                                type: TwitchApiCallType.Custom
                            ***REMOVED***)];
                    case 1:
                        data = _a.sent();
                        return [2 /*return*/, new ChattersList(data)];
                ***REMOVED***
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    __decorate([
        Cached(60)
    ], UnsupportedApi.prototype, "getChatters", null);
    UnsupportedApi = __decorate([
        Cacheable,
        rtfm('twitch', 'UnsupportedApi')
    ], UnsupportedApi);
    return UnsupportedApi;
***REMOVED***(BaseApi));
export ***REMOVED*** UnsupportedApi ***REMOVED***;
