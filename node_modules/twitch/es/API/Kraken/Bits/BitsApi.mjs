import ***REMOVED*** __awaiter, __decorate, __extends, __generator ***REMOVED*** from "tslib";
import ***REMOVED*** Cacheable, Cached ***REMOVED*** from '@d-fischer/cache-decorators';
import ***REMOVED*** extractUserId, rtfm ***REMOVED*** from 'twitch-common';
import ***REMOVED*** BaseApi ***REMOVED*** from "../../BaseApi.mjs";
import ***REMOVED*** CheermoteList ***REMOVED*** from "./CheermoteList.mjs";
/**
 * The API methods that deal with Bits/Cheermotes.
 *
 * Can be accessed using `client.kraken.bits` on an ***REMOVED***@ApiClient***REMOVED*** instance.
 *
 * ## Example
 * ```ts
 * const api = new ApiClient(new StaticAuthProvider(clientId, accessToken));
 * const cheermotes = await api.kraken.bits.getCheermotes();
 * ```
 */
var BitsApi = /** @class */ (function (_super) ***REMOVED***
    __extends(BitsApi, _super);
    function BitsApi() ***REMOVED***
        return _super !== null && _super.apply(this, arguments) || this;
    ***REMOVED***
    /**
     * Retrieves global and channel cheermotes.
     *
     * @param channel The channel you want to retrieve the available cheermotes for.
     * If not given, this method retrieves a list of globally available cheermotes.
     * @param includeSponsored Whether to include sponsored cheermotes in the list.
     */
    BitsApi.prototype.getCheermotes = function (channel, includeSponsored) ***REMOVED***
        if (includeSponsored === void 0) ***REMOVED*** includeSponsored = true; ***REMOVED***
        return __awaiter(this, void 0, Promise, function () ***REMOVED***
            var query, data;
            return __generator(this, function (_a) ***REMOVED***
                switch (_a.label) ***REMOVED***
                    case 0:
                        query = ***REMOVED******REMOVED***;
                        if (channel) ***REMOVED***
                            query.channel_id = extractUserId(channel);
                        ***REMOVED***
                        if (includeSponsored) ***REMOVED***
                            query.include_sponsored = 'true';
                        ***REMOVED***
                        return [4 /*yield*/, this._client.callApi(***REMOVED*** url: 'bits/actions', query: query ***REMOVED***)];
                    case 1:
                        data = _a.sent();
                        return [2 /*return*/, new CheermoteList(data.actions, this._client)];
                ***REMOVED***
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    __decorate([
        Cached(3600)
    ], BitsApi.prototype, "getCheermotes", null);
    BitsApi = __decorate([
        Cacheable,
        rtfm('twitch', 'BitsApi')
    ], BitsApi);
    return BitsApi;
***REMOVED***(BaseApi));
export ***REMOVED*** BitsApi ***REMOVED***;
