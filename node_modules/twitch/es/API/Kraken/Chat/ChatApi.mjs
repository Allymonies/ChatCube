import ***REMOVED*** __awaiter, __decorate, __extends, __generator ***REMOVED*** from "tslib";
import ***REMOVED*** Cacheable, Cached ***REMOVED*** from '@d-fischer/cache-decorators';
import ***REMOVED*** rtfm ***REMOVED*** from 'twitch-common';
import ***REMOVED*** BaseApi ***REMOVED*** from "../../BaseApi.mjs";
import ***REMOVED*** ChatEmoteList ***REMOVED*** from "./ChatEmoteList.mjs";
/**
 * The API methods that deal with chat and chatrooms.
 *
 * Can be accessed using `client.kraken.chat` on an ***REMOVED***@ApiClient***REMOVED*** instance.
 *
 * ## Example
 * ```ts
 * const api = new ApiClient(new StaticAuthProvider(clientId, accessToken));
 * const emotes = await api.kraken.chat.getEmotesBySets('1');
 * ```
 */
var ChatApi = /** @class */ (function (_super) ***REMOVED***
    __extends(ChatApi, _super);
    function ChatApi() ***REMOVED***
        return _super !== null && _super.apply(this, arguments) || this;
    ***REMOVED***
    /**
     * Retrieves a list of emotes for a given list of enote set IDs.
     *
     * @param emotesets The list of emote set IDs, either as array of strings or as a comma separated string.
     */
    ChatApi.prototype.getEmotesBySets = function (emotesets) ***REMOVED***
        return __awaiter(this, void 0, Promise, function () ***REMOVED***
            var data;
            return __generator(this, function (_a) ***REMOVED***
                switch (_a.label) ***REMOVED***
                    case 0:
                        if (typeof emotesets !== 'string') ***REMOVED***
                            emotesets = emotesets.join(',');
                        ***REMOVED***
                        return [4 /*yield*/, this._client.callApi(***REMOVED***
                                url: 'chat/emoticon_images',
                                query: ***REMOVED***
                                    emotesets: emotesets
                                ***REMOVED***
                            ***REMOVED***)];
                    case 1:
                        data = _a.sent();
                        return [2 /*return*/, new ChatEmoteList(data.emoticons)];
                ***REMOVED***
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    __decorate([
        Cached(3600)
    ], ChatApi.prototype, "getEmotesBySets", null);
    ChatApi = __decorate([
        Cacheable,
        rtfm('twitch', 'ChatApi')
    ], ChatApi);
    return ChatApi;
***REMOVED***(BaseApi));
export ***REMOVED*** ChatApi ***REMOVED***;
