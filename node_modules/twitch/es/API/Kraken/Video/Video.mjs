import ***REMOVED*** __awaiter, __decorate, __generator ***REMOVED*** from "tslib";
import ***REMOVED*** Enumerable ***REMOVED*** from '@d-fischer/shared-utils';
import ***REMOVED*** rtfm ***REMOVED*** from 'twitch-common';
/**
 * A Twitch video.
 */
var Video = /** @class */ (function () ***REMOVED***
    /** @private */
    function Video(data, client) ***REMOVED***
        this._data = data;
        this._client = client;
    ***REMOVED***
    Object.defineProperty(Video.prototype, "id", ***REMOVED***
        /**
         * The ID of the video.
         */
        get: function () ***REMOVED***
            return this._data._id;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(Video.prototype, "channelId", ***REMOVED***
        /**
         * The ID of the channel the video was uploaded to.
         */
        get: function () ***REMOVED***
            return this._data.channel._id;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(Video.prototype, "channelName", ***REMOVED***
        /**
         * The name of the channel the video was uploaded to.
         */
        get: function () ***REMOVED***
            return this._data.channel.name;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(Video.prototype, "channelDisplayName", ***REMOVED***
        /**
         * The display name of the channel the video was uploaded to.
         */
        get: function () ***REMOVED***
            return this._data.channel.display_name;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    /**
     * Retrieves more information about the channel the video was uploaded to.
     */
    Video.prototype.getChannel = function () ***REMOVED***
        return __awaiter(this, void 0, Promise, function () ***REMOVED***
            return __generator(this, function (_a) ***REMOVED***
                return [2 /*return*/, this._client.kraken.channels.getChannel(this._data.channel._id)];
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    Object.defineProperty(Video.prototype, "creationDate", ***REMOVED***
        /**
         * The date when the video was created.
         */
        get: function () ***REMOVED***
            return new Date(this._data.created_at);
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(Video.prototype, "description", ***REMOVED***
        /**
         * The description of the video.
         */
        get: function () ***REMOVED***
            return this._data.description;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(Video.prototype, "htmlDescription", ***REMOVED***
        /**
         * The description of the video in HTML.
         */
        get: function () ***REMOVED***
            return this._data.description_html;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(Video.prototype, "resolutions", ***REMOVED***
        /**
         * The resolutions the video is available in.
         */
        get: function () ***REMOVED***
            return this._data.resolutions;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    /**
     * Gets the FPS (frames per second) of the video for a given resolution.
     *
     * @param resolution The resolution to get FPS for. This is the *key* of the resolutions object.
     */
    Video.prototype.getFps = function (resolution) ***REMOVED***
        return this._data.fps[resolution];
    ***REMOVED***;
    Object.defineProperty(Video.prototype, "gameName", ***REMOVED***
        /**
         * The name of the game shown in the video.
         */
        get: function () ***REMOVED***
            return this._data.game;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(Video.prototype, "language", ***REMOVED***
        /**
         * The language of the video.
         */
        get: function () ***REMOVED***
            return this._data.language;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(Video.prototype, "length", ***REMOVED***
        /**
         * The length of the video, in seconds.
         */
        get: function () ***REMOVED***
            return this._data.length;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(Video.prototype, "mutedSegments", ***REMOVED***
        /**
         * The muted segments of the video.
         */
        get: function () ***REMOVED***
            return this._data.muted_segments;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    /**
     * Gets the URL for a given size of the video.
     *
     * @param size The size of the preview.
     */
    Video.prototype.getPreview = function (size) ***REMOVED***
        return this._data.preview[size];
    ***REMOVED***;
    Object.defineProperty(Video.prototype, "publishDate", ***REMOVED***
        /**
         * The date when the video was published.
         */
        get: function () ***REMOVED***
            return new Date(this._data.published_at);
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(Video.prototype, "status", ***REMOVED***
        /**
         * The status of the video.
         */
        get: function () ***REMOVED***
            return this._data.status;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(Video.prototype, "tags", ***REMOVED***
        /**
         * A list of tags of the video.
         */
        get: function () ***REMOVED***
            return this._data.tag_list.split(',');
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    /**
     * Gets a list of thumbnails for a given size of the video.
     *
     * @param size
     */
    Video.prototype.getThumbnails = function (size) ***REMOVED***
        return this._data.thumbnails[size];
    ***REMOVED***;
    Object.defineProperty(Video.prototype, "title", ***REMOVED***
        /**
         * The title of the video.
         */
        get: function () ***REMOVED***
            return this._data.title;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(Video.prototype, "url", ***REMOVED***
        /**
         * The URL of the video.
         */
        get: function () ***REMOVED***
            return this._data.url;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(Video.prototype, "isPublic", ***REMOVED***
        /**
         * Whether the video is public.
         */
        get: function () ***REMOVED***
            return this._data.viewable === 'public';
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(Video.prototype, "viewabilityDate", ***REMOVED***
        /**
         * The time when the video will be viewable publicly.
         */
        get: function () ***REMOVED***
            return this._data.viewable_at ? new Date(this._data.viewable_at) : null;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(Video.prototype, "views", ***REMOVED***
        /**
         * The number of views of the video.
         */
        get: function () ***REMOVED***
            return this._data.views;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    __decorate([
        Enumerable(false)
    ], Video.prototype, "_data", void 0);
    __decorate([
        Enumerable(false)
    ], Video.prototype, "_client", void 0);
    Video = __decorate([
        rtfm('twitch', 'Video', 'id')
    ], Video);
    return Video;
***REMOVED***());
export ***REMOVED*** Video ***REMOVED***;
