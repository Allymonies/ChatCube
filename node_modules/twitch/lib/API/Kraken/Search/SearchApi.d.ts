import ***REMOVED*** BaseApi ***REMOVED*** from '../../BaseApi';
import ***REMOVED*** Channel ***REMOVED*** from '../Channel/Channel';
import ***REMOVED*** Stream ***REMOVED*** from '../Stream/Stream';
/**
 * The API methods that deal with searching.
 *
 * Can be accessed using `client.kraken.search` on an ***REMOVED***@ApiClient***REMOVED*** instance.
 *
 * ## Example
 * ```ts
 * const api = new ApiClient(new StaticAuthProvider(clientId, accessToken));
 * const channel = await api.kraken.search.searchStreams('Hearthstone');
 * ```
 */
export declare class SearchApi extends BaseApi ***REMOVED***
    /**
     * Retrieves a list of channels that match the given search term.
     *
     * @param term The term you want to search for.
     * @param page The result page you want to retrieve.
     * @param limit The number of results you want to retrieve.
     */
    searchChannels(term: string, page?: number, limit?: number): Promise<Channel[]>;
    /**
     * Retrieves a list of streams that match the given search term.
     *
     * @param term The term you want to search for.
     * @param page The result page you want to retrieve.
     * @param limit The number of results you want to retrieve.
     * @param hls Whether you want only HLS or only non-HLS (RTMP) streams. If not set, finds both types of streams.
     */
    searchStreams(term: string, page?: number, limit?: number, hls?: boolean): Promise<Stream[]>;
***REMOVED***
