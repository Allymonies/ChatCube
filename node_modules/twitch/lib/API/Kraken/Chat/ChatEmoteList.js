"use strict";
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
exports.ChatEmoteList = void 0;
var tslib_1 = require("tslib");
var cache_decorators_1 = require("@d-fischer/cache-decorators");
var shared_utils_1 = require("@d-fischer/shared-utils");
var twitch_common_1 = require("twitch-common");
var ChatEmote_1 = require("./ChatEmote");
/**
 * A list of emotes.
 */
var ChatEmoteList = /** @class */ (function () ***REMOVED***
    /** @private */
    function ChatEmoteList(data) ***REMOVED***
        this._data = data;
    ***REMOVED***
    Object.defineProperty(ChatEmoteList.prototype, "emotes", ***REMOVED***
        /**
         * A list of all emotes in the list.
         */
        get: function () ***REMOVED***
            return this._data.map(function (emote) ***REMOVED*** return new ChatEmote_1.ChatEmote(emote); ***REMOVED***);
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    /**
     * Gets all emotes from the list that are from a given emote set.
     *
     * @param setId
     */
    ChatEmoteList.prototype.getAllFromSet = function (setId) ***REMOVED***
        return this._data.filter(function (emote) ***REMOVED*** return emote.emoticon_set === setId; ***REMOVED***).map(function (emote) ***REMOVED*** return new ChatEmote_1.ChatEmote(emote); ***REMOVED***);
    ***REMOVED***;
    /**
     * Finds a single emote by its ID.
     *
     * @param id
     */
    ChatEmoteList.prototype.getById = function (id) ***REMOVED***
        var data = this._data.find(function (emote) ***REMOVED*** return emote.id === id; ***REMOVED***);
        return data ? new ChatEmote_1.ChatEmote(data) : null;
    ***REMOVED***;
    tslib_1.__decorate([
        shared_utils_1.Enumerable(false)
    ], ChatEmoteList.prototype, "_data", void 0);
    tslib_1.__decorate([
        cache_decorators_1.CachedGetter()
    ], ChatEmoteList.prototype, "emotes", null);
    tslib_1.__decorate([
        cache_decorators_1.Cached()
    ], ChatEmoteList.prototype, "getAllFromSet", null);
    tslib_1.__decorate([
        cache_decorators_1.Cached()
    ], ChatEmoteList.prototype, "getById", null);
    ChatEmoteList = tslib_1.__decorate([
        cache_decorators_1.Cacheable,
        twitch_common_1.rtfm('twitch', 'ChatEmoteList')
    ], ChatEmoteList);
    return ChatEmoteList;
***REMOVED***());
exports.ChatEmoteList = ChatEmoteList;
