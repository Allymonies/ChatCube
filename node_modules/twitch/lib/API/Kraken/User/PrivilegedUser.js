"use strict";
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
exports.PrivilegedUser = void 0;
var tslib_1 = require("tslib");
var twitch_common_1 = require("twitch-common");
var User_1 = require("./User");
/**
 * A user you have extended privileges for, i.e. the currently authenticated user.
 *
 * @inheritDoc
 */
var PrivilegedUser = /** @class */ (function (_super) ***REMOVED***
    tslib_1.__extends(PrivilegedUser, _super);
    function PrivilegedUser() ***REMOVED***
        return _super !== null && _super.apply(this, arguments) || this;
    ***REMOVED***
    Object.defineProperty(PrivilegedUser.prototype, "email", ***REMOVED***
        /**
         * The user's email address.
         */
        get: function () ***REMOVED***
            return this._data.email;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(PrivilegedUser.prototype, "isEmailVerified", ***REMOVED***
        /**
         * Whether the user's email address is verified.
         */
        get: function () ***REMOVED***
            return this._data.email_verified;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(PrivilegedUser.prototype, "hasEmailNotifications", ***REMOVED***
        /**
         * Whether the user has email notifications enabled.
         */
        get: function () ***REMOVED***
            return this._data.notifications.email;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(PrivilegedUser.prototype, "hasPushNotifications", ***REMOVED***
        /**
         * Whether the user has push notifications enabled.
         */
        get: function () ***REMOVED***
            return this._data.notifications.push;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(PrivilegedUser.prototype, "isPartnered", ***REMOVED***
        /**
         * Whether the user is partnered.
         */
        get: function () ***REMOVED***
            return this._data.partnered;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(PrivilegedUser.prototype, "hasTwitter", ***REMOVED***
        /**
         * Whether the user has a Twitter account connected.
         */
        get: function () ***REMOVED***
            return this._data.twitter_connected;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    /**
     * Follows a channel.
     *
     * @param channel The channel to follow.
     * @param notifications Whether the user will receive notifications.
     */
    PrivilegedUser.prototype.followChannel = function (channel, notifications) ***REMOVED***
        return tslib_1.__awaiter(this, void 0, void 0, function () ***REMOVED***
            return tslib_1.__generator(this, function (_a) ***REMOVED***
                return [2 /*return*/, this._client.kraken.users.followChannel(this, channel, notifications)];
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    /**
     * Unfollows a channel.
     *
     * @param channel The channel to unfollow.
     */
    PrivilegedUser.prototype.unfollowChannel = function (channel) ***REMOVED***
        return tslib_1.__awaiter(this, void 0, void 0, function () ***REMOVED***
            return tslib_1.__generator(this, function (_a) ***REMOVED***
                return [2 /*return*/, this._client.kraken.users.unfollowChannel(this, channel)];
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    /**
     * Blocks a user.
     *
     * @param userToBlock The user to block.
     */
    PrivilegedUser.prototype.blockUser = function (userToBlock) ***REMOVED***
        return tslib_1.__awaiter(this, void 0, void 0, function () ***REMOVED***
            return tslib_1.__generator(this, function (_a) ***REMOVED***
                return [2 /*return*/, this._client.kraken.users.blockUser(this, userToBlock)];
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    /**
     * Unblocks a user.
     *
     * @param userToUnblock The user to unblock.
     */
    PrivilegedUser.prototype.unblockUser = function (userToUnblock) ***REMOVED***
        return tslib_1.__awaiter(this, void 0, void 0, function () ***REMOVED***
            return tslib_1.__generator(this, function (_a) ***REMOVED***
                return [2 /*return*/, this._client.kraken.users.unblockUser(this, userToUnblock)];
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    PrivilegedUser = tslib_1.__decorate([
        twitch_common_1.rtfm('twitch', 'PrivilegedUser', 'id')
    ], PrivilegedUser);
    return PrivilegedUser;
***REMOVED***(User_1.User));
exports.PrivilegedUser = PrivilegedUser;
