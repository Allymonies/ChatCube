"use strict";
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
exports.EmoteSetList = void 0;
var tslib_1 = require("tslib");
var cache_decorators_1 = require("@d-fischer/cache-decorators");
var shared_utils_1 = require("@d-fischer/shared-utils");
var twitch_common_1 = require("twitch-common");
/**
 * A list of emotes, grouped into emote sets, that a user can use.
 */
var EmoteSetList = /** @class */ (function () ***REMOVED***
    /** @private */
    function EmoteSetList(data) ***REMOVED***
        this._data = data;
    ***REMOVED***
    EmoteSetList_1 = EmoteSetList;
    /**
     * Finds the emote ID for the given emote code.
     *
     * @param emoteCode The emote code to check for.
     */
    EmoteSetList.prototype.findEmoteId = function (emoteCode) ***REMOVED***
        var e_1, _a, e_2, _b;
        try ***REMOVED***
            for (var _c = tslib_1.__values(Object.values(this._data)), _d = _c.next(); !_d.done; _d = _c.next()) ***REMOVED***
                var emoteSet = _d.value;
                try ***REMOVED***
                    for (var emoteSet_1 = (e_2 = void 0, tslib_1.__values(emoteSet)), emoteSet_1_1 = emoteSet_1.next(); !emoteSet_1_1.done; emoteSet_1_1 = emoteSet_1.next()) ***REMOVED***
                        var emote = emoteSet_1_1.value;
                        if (EmoteSetList_1._testEmoteCode(emote.code, emoteCode)) ***REMOVED***
                            return emote.id;
                        ***REMOVED***
                    ***REMOVED***
                ***REMOVED***
                catch (e_2_1) ***REMOVED*** e_2 = ***REMOVED*** error: e_2_1 ***REMOVED***; ***REMOVED***
                finally ***REMOVED***
                    try ***REMOVED***
                        if (emoteSet_1_1 && !emoteSet_1_1.done && (_b = emoteSet_1.return)) _b.call(emoteSet_1);
                    ***REMOVED***
                    finally ***REMOVED*** if (e_2) throw e_2.error; ***REMOVED***
                ***REMOVED***
            ***REMOVED***
        ***REMOVED***
        catch (e_1_1) ***REMOVED*** e_1 = ***REMOVED*** error: e_1_1 ***REMOVED***; ***REMOVED***
        finally ***REMOVED***
            try ***REMOVED***
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            ***REMOVED***
            finally ***REMOVED*** if (e_1) throw e_1.error; ***REMOVED***
        ***REMOVED***
        return undefined;
    ***REMOVED***;
    EmoteSetList._testEmoteCode = function (code, text) ***REMOVED***
        if (!code.includes('\\')) ***REMOVED***
            return code === text;
        ***REMOVED***
        var re = new RegExp(code);
        var match = re.exec(text);
        return (match === null || match === void 0 ? void 0 : match.index) === 0 && match[0].length === match.input.length;
    ***REMOVED***;
    var EmoteSetList_1;
    tslib_1.__decorate([
        shared_utils_1.Enumerable(false)
    ], EmoteSetList.prototype, "_data", void 0);
    tslib_1.__decorate([
        cache_decorators_1.Cached(Infinity, true)
    ], EmoteSetList.prototype, "findEmoteId", null);
    EmoteSetList = EmoteSetList_1 = tslib_1.__decorate([
        cache_decorators_1.Cacheable,
        twitch_common_1.rtfm('twitch', 'EmoteSetList')
    ], EmoteSetList);
    return EmoteSetList;
***REMOVED***());
exports.EmoteSetList = EmoteSetList;
