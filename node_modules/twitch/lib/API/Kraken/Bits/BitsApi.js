"use strict";
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
exports.BitsApi = void 0;
var tslib_1 = require("tslib");
var cache_decorators_1 = require("@d-fischer/cache-decorators");
var twitch_common_1 = require("twitch-common");
var BaseApi_1 = require("../../BaseApi");
var CheermoteList_1 = require("./CheermoteList");
/**
 * The API methods that deal with Bits/Cheermotes.
 *
 * Can be accessed using `client.kraken.bits` on an ***REMOVED***@ApiClient***REMOVED*** instance.
 *
 * ## Example
 * ```ts
 * const api = new ApiClient(new StaticAuthProvider(clientId, accessToken));
 * const cheermotes = await api.kraken.bits.getCheermotes();
 * ```
 */
var BitsApi = /** @class */ (function (_super) ***REMOVED***
    tslib_1.__extends(BitsApi, _super);
    function BitsApi() ***REMOVED***
        return _super !== null && _super.apply(this, arguments) || this;
    ***REMOVED***
    /**
     * Retrieves global and channel cheermotes.
     *
     * @param channel The channel you want to retrieve the available cheermotes for.
     * If not given, this method retrieves a list of globally available cheermotes.
     * @param includeSponsored Whether to include sponsored cheermotes in the list.
     */
    BitsApi.prototype.getCheermotes = function (channel, includeSponsored) ***REMOVED***
        if (includeSponsored === void 0) ***REMOVED*** includeSponsored = true; ***REMOVED***
        return tslib_1.__awaiter(this, void 0, void 0, function () ***REMOVED***
            var query, data;
            return tslib_1.__generator(this, function (_a) ***REMOVED***
                switch (_a.label) ***REMOVED***
                    case 0:
                        query = ***REMOVED******REMOVED***;
                        if (channel) ***REMOVED***
                            query.channel_id = twitch_common_1.extractUserId(channel);
                        ***REMOVED***
                        if (includeSponsored) ***REMOVED***
                            query.include_sponsored = 'true';
                        ***REMOVED***
                        return [4 /*yield*/, this._client.callApi(***REMOVED*** url: 'bits/actions', query: query ***REMOVED***)];
                    case 1:
                        data = _a.sent();
                        return [2 /*return*/, new CheermoteList_1.CheermoteList(data.actions, this._client)];
                ***REMOVED***
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    tslib_1.__decorate([
        cache_decorators_1.Cached(3600)
    ], BitsApi.prototype, "getCheermotes", null);
    BitsApi = tslib_1.__decorate([
        cache_decorators_1.Cacheable,
        twitch_common_1.rtfm('twitch', 'BitsApi')
    ], BitsApi);
    return BitsApi;
***REMOVED***(BaseApi_1.BaseApi));
exports.BitsApi = BitsApi;
