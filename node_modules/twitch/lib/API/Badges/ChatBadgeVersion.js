"use strict";
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
exports.ChatBadgeVersion = void 0;
var tslib_1 = require("tslib");
var shared_utils_1 = require("@d-fischer/shared-utils");
var twitch_common_1 = require("twitch-common");
/**
 * A version of a badge.
 */
var ChatBadgeVersion = /** @class */ (function () ***REMOVED***
    /** @private */
    function ChatBadgeVersion(data) ***REMOVED***
        this._data = data;
    ***REMOVED***
    Object.defineProperty(ChatBadgeVersion.prototype, "clickAction", ***REMOVED***
        /**
         * The action to execute when the badge is clicked.
         */
        get: function () ***REMOVED***
            return this._data.click_action;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(ChatBadgeVersion.prototype, "clickUrl", ***REMOVED***
        /**
         * The URL to visit when the badge is clicked.
         *
         * Only applies if clickAction === 'visit_url'.
         */
        get: function () ***REMOVED***
            return this._data.click_url;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(ChatBadgeVersion.prototype, "description", ***REMOVED***
        /**
         * The description of the badge.
         */
        get: function () ***REMOVED***
            return this._data.description;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    /**
     * Gets an image URL for the given scale.
     *
     * @param scale The scale of the badge image.
     */
    ChatBadgeVersion.prototype.getImageUrl = function (scale) ***REMOVED***
        // eslint-disable-next-line @typescript-eslint/non-nullable-type-assertion-style
        return this._data["image_url_" + scale + "x"];
    ***REMOVED***;
    Object.defineProperty(ChatBadgeVersion.prototype, "title", ***REMOVED***
        /**
         * The title of the badge.
         */
        get: function () ***REMOVED***
            return this._data.title;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    tslib_1.__decorate([
        shared_utils_1.Enumerable(false)
    ], ChatBadgeVersion.prototype, "_data", void 0);
    ChatBadgeVersion = tslib_1.__decorate([
        twitch_common_1.rtfm('twitch', 'ChatBadgeVersion')
    ], ChatBadgeVersion);
    return ChatBadgeVersion;
***REMOVED***());
exports.ChatBadgeVersion = ChatBadgeVersion;
