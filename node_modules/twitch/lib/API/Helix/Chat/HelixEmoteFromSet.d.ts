import type ***REMOVED*** ApiClient ***REMOVED*** from '../../../ApiClient';
import type ***REMOVED*** HelixUser ***REMOVED*** from '../User/HelixUser';
import type ***REMOVED*** HelixEmoteData ***REMOVED*** from './HelixEmote';
import ***REMOVED*** HelixEmote ***REMOVED*** from './HelixEmote';
/** @private */
export interface HelixEmoteFromSetData extends HelixEmoteData ***REMOVED***
    emote_type: string;
    emote_set_id: string;
    owner_id: string;
***REMOVED***
/**
 * A Twitch Channel emote.
 *
 * @inheritDoc
 */
export declare class HelixEmoteFromSet extends HelixEmote ***REMOVED***
    /** @private */ protected readonly _data: HelixEmoteFromSetData;
    private readonly _client;
    constructor(data: HelixEmoteFromSetData, client: ApiClient);
    /**
     * The type of the emote.
     *
     * Known values are: `subscriptions`, `bitstier`, `follower`, `rewards`, `globals`, `smilies`, `prime`, `limitedtime`.
     *
     * This list may be non-exhaustive.
     */
    get type(): string;
    /**
     * The ID of the emote set the emote is part of.
     */
    get emoteSetId(): string;
    /**
     * The ID of the user that owns the emote, or null if the emote is not owned by a user.
     */
    get ownerId(): string | null;
    /**
     * Retrieves more info about the user that owns the emote, or null if the emote is not owned by a user.
     */
    getOwner(): Promise<HelixUser | null>;
***REMOVED***
