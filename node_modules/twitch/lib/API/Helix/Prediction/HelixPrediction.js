"use strict";
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
exports.HelixPrediction = void 0;
var tslib_1 = require("tslib");
var shared_utils_1 = require("@d-fischer/shared-utils");
var HelixPredictionOutcome_1 = require("./HelixPredictionOutcome");
var twitch_common_1 = require("twitch-common");
/**
 * A channel prediction.
 */
var HelixPrediction = /** @class */ (function () ***REMOVED***
    /** @private */
    function HelixPrediction(data, client) ***REMOVED***
        this._data = data;
        this._client = client;
    ***REMOVED***
    Object.defineProperty(HelixPrediction.prototype, "id", ***REMOVED***
        /**
         * The ID of the prediction.
         */
        get: function () ***REMOVED***
            return this._data.id;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixPrediction.prototype, "broadcasterId", ***REMOVED***
        /**
         * The ID of the broadcaster.
         */
        get: function () ***REMOVED***
            return this._data.broadcaster_id;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixPrediction.prototype, "broadcasterName", ***REMOVED***
        /**
         * The name of the broadcaster.
         */
        get: function () ***REMOVED***
            return this._data.broadcaster_login;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixPrediction.prototype, "broadcasterDisplayName", ***REMOVED***
        /**
         * The display name of the broadcaster.
         */
        get: function () ***REMOVED***
            return this._data.broadcaster_name;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    /**
     * Retrieves more information about the broadcaster.
     */
    HelixPrediction.prototype.getBroadcaster = function () ***REMOVED***
        return tslib_1.__awaiter(this, void 0, void 0, function () ***REMOVED***
            return tslib_1.__generator(this, function (_a) ***REMOVED***
                switch (_a.label) ***REMOVED***
                    case 0: return [4 /*yield*/, this._client.helix.users.getUserById(this._data.broadcaster_id)];
                    case 1: return [2 /*return*/, (_a.sent())];
                ***REMOVED***
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    Object.defineProperty(HelixPrediction.prototype, "title", ***REMOVED***
        /**
         * The title of the prediction.
         */
        get: function () ***REMOVED***
            return this._data.title;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixPrediction.prototype, "status", ***REMOVED***
        /**
         * The status of the prediction.
         */
        get: function () ***REMOVED***
            return this._data.status;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixPrediction.prototype, "autoLockAfter", ***REMOVED***
        /**
         * The time after which the prediction will be automatically locked, in seconds from creation.
         */
        get: function () ***REMOVED***
            return this._data.prediction_window;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixPrediction.prototype, "creationDate", ***REMOVED***
        /**
         * The date when the prediction started.
         */
        get: function () ***REMOVED***
            return new Date(this._data.created_at);
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixPrediction.prototype, "endDate", ***REMOVED***
        /**
         * The date when the prediction ended, or null if it didn't end yet.
         */
        get: function () ***REMOVED***
            return this._data.ended_at ? new Date(this._data.ended_at) : null;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixPrediction.prototype, "lockDate", ***REMOVED***
        /**
         * The date when the prediction was locked, or null if it wasn't locked yet.
         */
        get: function () ***REMOVED***
            return this._data.locked_at ? new Date(this._data.locked_at) : null;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixPrediction.prototype, "outcomes", ***REMOVED***
        /**
         * The possible outcomes of the prediction.
         */
        get: function () ***REMOVED***
            var _this = this;
            return this._data.outcomes.map(function (data) ***REMOVED*** return new HelixPredictionOutcome_1.HelixPredictionOutcome(data, _this._client); ***REMOVED***);
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    tslib_1.__decorate([
        shared_utils_1.Enumerable(false)
    ], HelixPrediction.prototype, "_data", void 0);
    tslib_1.__decorate([
        shared_utils_1.Enumerable(false)
    ], HelixPrediction.prototype, "_client", void 0);
    HelixPrediction = tslib_1.__decorate([
        twitch_common_1.rtfm('twitch', 'HelixPrediction', 'id')
    ], HelixPrediction);
    return HelixPrediction;
***REMOVED***());
exports.HelixPrediction = HelixPrediction;
