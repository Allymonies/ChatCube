"use strict";
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
exports.HelixCustomReward = void 0;
var tslib_1 = require("tslib");
var shared_utils_1 = require("@d-fischer/shared-utils");
var twitch_common_1 = require("twitch-common");
/**
 * A custom Channel Points reward.
 */
var HelixCustomReward = /** @class */ (function () ***REMOVED***
    /** @private */
    function HelixCustomReward(data, client) ***REMOVED***
        this._data = data;
        this._client = client;
    ***REMOVED***
    Object.defineProperty(HelixCustomReward.prototype, "id", ***REMOVED***
        /**
         * The ID of the reward.
         */
        get: function () ***REMOVED***
            return this._data.id;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixCustomReward.prototype, "broadcasterId", ***REMOVED***
        /**
         * The ID of the broadcaster the reward belongs to.
         */
        get: function () ***REMOVED***
            return this._data.broadcaster_id;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixCustomReward.prototype, "broadcasterName", ***REMOVED***
        /**
         * The name of the broadcaster the reward belongs to.
         */
        get: function () ***REMOVED***
            return this._data.broadcaster_login;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixCustomReward.prototype, "broadcasterDisplayName", ***REMOVED***
        /**
         * The display name of the broadcaster the reward belongs to.
         */
        get: function () ***REMOVED***
            return this._data.broadcaster_name;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    /**
     * Retrieves more information about the reward's broadcaster.
     */
    HelixCustomReward.prototype.getBroadcaster = function () ***REMOVED***
        return tslib_1.__awaiter(this, void 0, void 0, function () ***REMOVED***
            return tslib_1.__generator(this, function (_a) ***REMOVED***
                return [2 /*return*/, this._client.helix.users.getUserById(this._data.broadcaster_id)];
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    /**
     * Gets the URL of the image of the reward in the given scale.
     *
     * @param scale The scale of the image.
     */
    HelixCustomReward.prototype.getImageUrl = function (scale) ***REMOVED***
        var _a, _b;
        // eslint-disable-next-line @typescript-eslint/non-nullable-type-assertion-style
        var urlProp = "url_" + scale + "x";
        return (_b = (_a = this._data.image) === null || _a === void 0 ? void 0 : _a[urlProp]) !== null && _b !== void 0 ? _b : this._data.default_image[urlProp];
    ***REMOVED***;
    Object.defineProperty(HelixCustomReward.prototype, "backgroundColor", ***REMOVED***
        /**
         * The background color of the reward.
         */
        get: function () ***REMOVED***
            return this._data.background_color;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixCustomReward.prototype, "isEnabled", ***REMOVED***
        /**
         * Whether the reward is enabled (shown to users).
         */
        get: function () ***REMOVED***
            return this._data.is_enabled;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixCustomReward.prototype, "cost", ***REMOVED***
        /**
         * The channel points cost of the reward.
         */
        get: function () ***REMOVED***
            return this._data.cost;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixCustomReward.prototype, "title", ***REMOVED***
        /**
         * The title of the reward.
         */
        get: function () ***REMOVED***
            return this._data.title;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixCustomReward.prototype, "propmt", ***REMOVED***
        /**
         * @deprecated Use `prompt` instead.
         */
        get: function () ***REMOVED***
            return this._data.prompt;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixCustomReward.prototype, "prompt", ***REMOVED***
        /**
         * The prompt shown to users when redeeming the reward.
         */
        get: function () ***REMOVED***
            return this._data.prompt;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixCustomReward.prototype, "userInputRequired", ***REMOVED***
        /**
         * Whether the reward requires user input to be redeemed.
         */
        get: function () ***REMOVED***
            return this._data.is_user_input_required;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixCustomReward.prototype, "maxRedemptionsPerStream", ***REMOVED***
        /**
         * The maximum number of redemptions of the reward per stream. `null` means no limit.
         */
        get: function () ***REMOVED***
            return this._data.max_per_stream_setting.is_enabled ? this._data.max_per_stream_setting.max_per_stream : null;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixCustomReward.prototype, "maxRedemptionsPerUserPerStream", ***REMOVED***
        /**
         * The maximum number of redemptions of the reward per stream for each user. `null` means no limit.
         */
        get: function () ***REMOVED***
            return this._data.max_per_user_per_stream_setting.is_enabled
                ? this._data.max_per_user_per_stream_setting.max_per_user_per_stream
                : null;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixCustomReward.prototype, "globalCooldown", ***REMOVED***
        /**
         * The cooldown between two redemptions of the reward, in seconds. `null` means no cooldown.
         */
        get: function () ***REMOVED***
            return this._data.global_cooldown_setting.is_enabled
                ? this._data.global_cooldown_setting.global_cooldown_seconds
                : null;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixCustomReward.prototype, "isPaused", ***REMOVED***
        /**
         * Whether the reward is paused. If true, users can't redeem it.
         */
        get: function () ***REMOVED***
            return this._data.is_paused;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixCustomReward.prototype, "isInStock", ***REMOVED***
        /**
         * Whether the reward is currently in stock.
         */
        get: function () ***REMOVED***
            return this._data.is_in_stock;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixCustomReward.prototype, "redemptionsThisStream", ***REMOVED***
        /**
         * How often the reward was already redeemed this stream.
         *
         * Only available when the stream is live and `maxRedemptionsPerStream` is set. Otherwise, this is `null`.
         */
        get: function () ***REMOVED***
            return this._data.redemptions_redeemed_current_stream;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixCustomReward.prototype, "autoApproved", ***REMOVED***
        /**
         * Whether redemptions should be automatically approved.
         */
        get: function () ***REMOVED***
            return this._data.should_redemptions_skip_request_queue;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixCustomReward.prototype, "cooldownExpiryDate", ***REMOVED***
        /**
         * Them time when the cooldown ends. `null` means there is currently no cooldown.
         */
        get: function () ***REMOVED***
            return this._data.cooldown_expires_at ? new Date(this._data.cooldown_expires_at) : null;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    tslib_1.__decorate([
        shared_utils_1.Enumerable(false)
    ], HelixCustomReward.prototype, "_data", void 0);
    tslib_1.__decorate([
        shared_utils_1.Enumerable(false)
    ], HelixCustomReward.prototype, "_client", void 0);
    HelixCustomReward = tslib_1.__decorate([
        twitch_common_1.rtfm('twitch', 'HelixCustomReward', 'id')
    ], HelixCustomReward);
    return HelixCustomReward;
***REMOVED***());
exports.HelixCustomReward = HelixCustomReward;
