"use strict";
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
exports.HelixPaginatedRequestWithTotal = void 0;
var tslib_1 = require("tslib");
var twitch_common_1 = require("twitch-common");
var HelixPaginatedRequest_1 = require("./HelixPaginatedRequest");
/**
 * A special case of ***REMOVED***@HelixPaginatedRequest***REMOVED*** with support for fetching the total number of entities, whenever an endpoint supports it.
 */
var HelixPaginatedRequestWithTotal = /** @class */ (function (_super) ***REMOVED***
    tslib_1.__extends(HelixPaginatedRequestWithTotal, _super);
    function HelixPaginatedRequestWithTotal() ***REMOVED***
        return _super !== null && _super.apply(this, arguments) || this;
    ***REMOVED***
    /**
     * Retrieves and returns the total number of entities existing in the queried result set.
     */
    HelixPaginatedRequestWithTotal.prototype.getTotalCount = function () ***REMOVED***
        var _a;
        return tslib_1.__awaiter(this, void 0, void 0, function () ***REMOVED***
            var data, _b;
            return tslib_1.__generator(this, function (_c) ***REMOVED***
                switch (_c.label) ***REMOVED***
                    case 0:
                        if (!((_a = this._currentData) !== null && _a !== void 0)) return [3 /*break*/, 1];
                        _b = _a;
                        return [3 /*break*/, 3];
                    case 1: return [4 /*yield*/, this._fetchData(***REMOVED*** query: ***REMOVED*** after: undefined ***REMOVED*** ***REMOVED***)];
                    case 2:
                        _b = (_c.sent());
                        _c.label = 3;
                    case 3:
                        data = _b;
                        return [2 /*return*/, data.total];
                ***REMOVED***
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    HelixPaginatedRequestWithTotal = tslib_1.__decorate([
        twitch_common_1.rtfm('twitch', 'HelixPaginatedRequestWithTotal')
    ], HelixPaginatedRequestWithTotal);
    return HelixPaginatedRequestWithTotal;
***REMOVED***(HelixPaginatedRequest_1.HelixPaginatedRequest));
exports.HelixPaginatedRequestWithTotal = HelixPaginatedRequestWithTotal;
