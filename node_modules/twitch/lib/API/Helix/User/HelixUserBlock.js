"use strict";
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
exports.HelixUserBlock = void 0;
var tslib_1 = require("tslib");
var shared_utils_1 = require("@d-fischer/shared-utils");
var twitch_common_1 = require("twitch-common");
/**
 * An user blocked by a previously given user.
 */
var HelixUserBlock = /** @class */ (function () ***REMOVED***
    /** @private */
    function HelixUserBlock(data, client) ***REMOVED***
        this._data = data;
        this._client = client;
    ***REMOVED***
    Object.defineProperty(HelixUserBlock.prototype, "userId", ***REMOVED***
        /**
         * The ID of the blocked user.
         */
        get: function () ***REMOVED***
            return this._data.user_id;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixUserBlock.prototype, "userName", ***REMOVED***
        /**
         * The name of the blocked user.
         */
        get: function () ***REMOVED***
            return this._data.user_login;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixUserBlock.prototype, "userDisplayName", ***REMOVED***
        /**
         * The display name of the blocked user.
         */
        get: function () ***REMOVED***
            return this._data.display_name;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    /**
     * Retrieves additional information about the blocked user.
     */
    HelixUserBlock.prototype.getUser = function () ***REMOVED***
        return tslib_1.__awaiter(this, void 0, void 0, function () ***REMOVED***
            return tslib_1.__generator(this, function (_a) ***REMOVED***
                return [2 /*return*/, this._client.helix.users.getUserById(this._data.user_id)];
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    tslib_1.__decorate([
        shared_utils_1.Enumerable(false)
    ], HelixUserBlock.prototype, "_data", void 0);
    tslib_1.__decorate([
        shared_utils_1.Enumerable(false)
    ], HelixUserBlock.prototype, "_client", void 0);
    HelixUserBlock = tslib_1.__decorate([
        twitch_common_1.rtfm('twitch', 'HelixUserBlock', 'userId')
    ], HelixUserBlock);
    return HelixUserBlock;
***REMOVED***());
exports.HelixUserBlock = HelixUserBlock;
