"use strict";
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
exports.HelixTagApi = void 0;
var tslib_1 = require("tslib");
var twitch_api_call_1 = require("twitch-api-call");
var twitch_common_1 = require("twitch-common");
var BaseApi_1 = require("../../BaseApi");
var HelixPaginatedRequest_1 = require("../HelixPaginatedRequest");
var HelixPaginatedResult_1 = require("../HelixPaginatedResult");
var HelixPagination_1 = require("../HelixPagination");
var HelixTag_1 = require("./HelixTag");
/**
 * The Helix API methods that deal with tags.
 *
 * Can be accessed using `client.helix.tags` on an ***REMOVED***@ApiClient***REMOVED*** instance.
 *
 * ## Example
 * ```ts
 * const api = new ApiClient(new StaticAuthProvider(clientId, accessToken));
 * const tags = await api.helix.tags.getAllStreamTags();
 * ```
 */
var HelixTagApi = /** @class */ (function (_super) ***REMOVED***
    tslib_1.__extends(HelixTagApi, _super);
    function HelixTagApi() ***REMOVED***
        return _super !== null && _super.apply(this, arguments) || this;
    ***REMOVED***
    /**
     * Retrieves all stream tags.
     *
     * @param pagination
     *
     * @expandParams
     */
    HelixTagApi.prototype.getAllStreamTags = function (pagination) ***REMOVED***
        if (pagination === void 0) ***REMOVED*** pagination = ***REMOVED******REMOVED***; ***REMOVED***
        return tslib_1.__awaiter(this, void 0, void 0, function () ***REMOVED***
            var result;
            return tslib_1.__generator(this, function (_a) ***REMOVED***
                switch (_a.label) ***REMOVED***
                    case 0: return [4 /*yield*/, this._client.callApi(***REMOVED***
                            type: twitch_api_call_1.TwitchApiCallType.Helix,
                            url: 'tags/streams',
                            query: HelixPagination_1.makePaginationQuery(pagination)
                        ***REMOVED***)];
                    case 1:
                        result = _a.sent();
                        return [2 /*return*/, HelixPaginatedResult_1.createPaginatedResult(result, HelixTag_1.HelixTag)];
                ***REMOVED***
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    /**
     * Creates a paginator for all stream tags.
     */
    HelixTagApi.prototype.getAllStreamTagsPaginated = function () ***REMOVED***
        return new HelixPaginatedRequest_1.HelixPaginatedRequest(***REMOVED***
            url: 'tags/streams'
    ***REMOVED*** this._client, function (data) ***REMOVED*** return new HelixTag_1.HelixTag(data); ***REMOVED***);
    ***REMOVED***;
    /**
     * Retrieves a set of stream tags by IDs.
     *
     * @param ids The IDs of the stream tags.
     */
    HelixTagApi.prototype.getStreamTagsByIds = function (ids) ***REMOVED***
        return tslib_1.__awaiter(this, void 0, void 0, function () ***REMOVED***
            var result;
            return tslib_1.__generator(this, function (_a) ***REMOVED***
                switch (_a.label) ***REMOVED***
                    case 0:
                        if (!ids.length) ***REMOVED***
                            return [2 /*return*/, []];
                        ***REMOVED***
                        return [4 /*yield*/, this._client.callApi(***REMOVED***
                                type: twitch_api_call_1.TwitchApiCallType.Helix,
                                url: 'tags/streams',
                                query: ***REMOVED***
                                    tag_id: ids
                                ***REMOVED***
                            ***REMOVED***)];
                    case 1:
                        result = _a.sent();
                        return [2 /*return*/, result.data.map(function (data) ***REMOVED*** return new HelixTag_1.HelixTag(data); ***REMOVED***)];
                ***REMOVED***
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    /**
     * Retrieves a single stream tag by ID.
     *
     * @param id The ID of the stream tag.
     */
    HelixTagApi.prototype.getStreamTagById = function (id) ***REMOVED***
        return tslib_1.__awaiter(this, void 0, void 0, function () ***REMOVED***
            var tags;
            return tslib_1.__generator(this, function (_a) ***REMOVED***
                switch (_a.label) ***REMOVED***
                    case 0: return [4 /*yield*/, this.getStreamTagsByIds([id])];
                    case 1:
                        tags = _a.sent();
                        return [2 /*return*/, tags.length ? tags[0] : null];
                ***REMOVED***
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    HelixTagApi = tslib_1.__decorate([
        twitch_common_1.rtfm('twitch', 'HelixTagApi')
    ], HelixTagApi);
    return HelixTagApi;
***REMOVED***(BaseApi_1.BaseApi));
exports.HelixTagApi = HelixTagApi;
