"use strict";
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
exports.HelixClip = void 0;
var tslib_1 = require("tslib");
var shared_utils_1 = require("@d-fischer/shared-utils");
var twitch_common_1 = require("twitch-common");
var HelixClip = /** @class */ (function () ***REMOVED***
    /** @private */
    function HelixClip(data, client) ***REMOVED***
        this._data = data;
        this._client = client;
    ***REMOVED***
    Object.defineProperty(HelixClip.prototype, "id", ***REMOVED***
        /**
         * The clip ID.
         */
        get: function () ***REMOVED***
            return this._data.id;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixClip.prototype, "url", ***REMOVED***
        /**
         * The URL of the clip.
         */
        get: function () ***REMOVED***
            return this._data.url;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixClip.prototype, "embedUrl", ***REMOVED***
        /**
         * The embed URL of the clip.
         */
        get: function () ***REMOVED***
            return this._data.embed_url;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixClip.prototype, "broadcasterId", ***REMOVED***
        /**
         * The user ID of the broadcaster of the stream where the clip was created.
         */
        get: function () ***REMOVED***
            return this._data.broadcaster_id;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixClip.prototype, "broadcasterDisplayName", ***REMOVED***
        /**
         * The display name of the broadcaster of the stream where the clip was created.
         */
        get: function () ***REMOVED***
            return this._data.broadcaster_name;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    /**
     * Retrieves information about the broadcaster of the stream where the clip was created.
     */
    HelixClip.prototype.getBroadcaster = function () ***REMOVED***
        return tslib_1.__awaiter(this, void 0, void 0, function () ***REMOVED***
            return tslib_1.__generator(this, function (_a) ***REMOVED***
                return [2 /*return*/, this._client.helix.users.getUserById(this._data.broadcaster_id)];
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    Object.defineProperty(HelixClip.prototype, "creatorId", ***REMOVED***
        /**
         * The user ID of the creator of the clip.
         */
        get: function () ***REMOVED***
            return this._data.creator_id;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixClip.prototype, "creatorDisplayName", ***REMOVED***
        /**
         * The display name of the creator of the clip.
         */
        get: function () ***REMOVED***
            return this._data.creator_name;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    /**
     * Retrieves information about the creator of the clip.
     */
    HelixClip.prototype.getCreator = function () ***REMOVED***
        return tslib_1.__awaiter(this, void 0, void 0, function () ***REMOVED***
            return tslib_1.__generator(this, function (_a) ***REMOVED***
                return [2 /*return*/, this._client.helix.users.getUserById(this._data.creator_id)];
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    Object.defineProperty(HelixClip.prototype, "videoId", ***REMOVED***
        /**
         * The ID of the video the clip is taken from.
         */
        get: function () ***REMOVED***
            return this._data.video_id;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    /**
     * Retrieves information about the video the clip is taken from.
     */
    HelixClip.prototype.getVideo = function () ***REMOVED***
        return tslib_1.__awaiter(this, void 0, void 0, function () ***REMOVED***
            return tslib_1.__generator(this, function (_a) ***REMOVED***
                return [2 /*return*/, this._client.helix.videos.getVideoById(this._data.video_id)];
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    Object.defineProperty(HelixClip.prototype, "gameId", ***REMOVED***
        /**
         * The ID of the game that was being played when the clip was created.
         */
        get: function () ***REMOVED***
            return this._data.game_id;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    /**
     * Retrieves information about the game that was being played when the clip was created.
     */
    HelixClip.prototype.getGame = function () ***REMOVED***
        return tslib_1.__awaiter(this, void 0, void 0, function () ***REMOVED***
            return tslib_1.__generator(this, function (_a) ***REMOVED***
                return [2 /*return*/, this._client.helix.games.getGameById(this._data.game_id)];
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    Object.defineProperty(HelixClip.prototype, "language", ***REMOVED***
        /**
         * The language of the stream where the clip was created.
         */
        get: function () ***REMOVED***
            return this._data.language;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixClip.prototype, "title", ***REMOVED***
        /**
         * The title of the clip.
         */
        get: function () ***REMOVED***
            return this._data.title;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixClip.prototype, "views", ***REMOVED***
        /**
         * The number of views of the clip.
         */
        get: function () ***REMOVED***
            return this._data.view_count;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixClip.prototype, "creationDate", ***REMOVED***
        /**
         * The date when the clip was created.
         */
        get: function () ***REMOVED***
            return new Date(this._data.created_at);
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixClip.prototype, "thumbnailUrl", ***REMOVED***
        /**
         * The URL of the thumbnail of the clip.
         */
        get: function () ***REMOVED***
            return this._data.thumbnail_url;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    tslib_1.__decorate([
        shared_utils_1.Enumerable(false)
    ], HelixClip.prototype, "_data", void 0);
    tslib_1.__decorate([
        shared_utils_1.Enumerable(false)
    ], HelixClip.prototype, "_client", void 0);
    HelixClip = tslib_1.__decorate([
        twitch_common_1.rtfm('twitch', 'HelixClip', 'id')
    ], HelixClip);
    return HelixClip;
***REMOVED***());
exports.HelixClip = HelixClip;
