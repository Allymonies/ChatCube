"use strict";
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
exports.HelixBitsLeaderboardEntry = void 0;
var tslib_1 = require("tslib");
var shared_utils_1 = require("@d-fischer/shared-utils");
var twitch_common_1 = require("twitch-common");
/**
 * A Bits leaderboard entry.
 */
var HelixBitsLeaderboardEntry = /** @class */ (function () ***REMOVED***
    /** @private */
    function HelixBitsLeaderboardEntry(data, client) ***REMOVED***
        this._data = data;
        this._client = client;
    ***REMOVED***
    Object.defineProperty(HelixBitsLeaderboardEntry.prototype, "userId", ***REMOVED***
        /**
         * The ID of the user on the leaderboard.
         */
        get: function () ***REMOVED***
            return this._data.user_id;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixBitsLeaderboardEntry.prototype, "userName", ***REMOVED***
        /**
         * The name of the user on the leaderboard.
         */
        get: function () ***REMOVED***
            return this._data.user_login;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixBitsLeaderboardEntry.prototype, "userDisplayName", ***REMOVED***
        /**
         * The display name of the user on the leaderboard.
         */
        get: function () ***REMOVED***
            return this._data.user_name;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixBitsLeaderboardEntry.prototype, "rank", ***REMOVED***
        /**
         * The position of the user on the leaderboard.
         */
        get: function () ***REMOVED***
            return this._data.rank;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(HelixBitsLeaderboardEntry.prototype, "amount", ***REMOVED***
        /**
         * The amount of bits used in the given period of time.
         */
        get: function () ***REMOVED***
            return this._data.score;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    /**
     * Retrieves the user of entry on the leaderboard.
     */
    HelixBitsLeaderboardEntry.prototype.getUser = function () ***REMOVED***
        return tslib_1.__awaiter(this, void 0, void 0, function () ***REMOVED***
            return tslib_1.__generator(this, function (_a) ***REMOVED***
                return [2 /*return*/, this._client.helix.users.getUserById(this._data.user_id)];
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    tslib_1.__decorate([
        shared_utils_1.Enumerable(false)
    ], HelixBitsLeaderboardEntry.prototype, "_data", void 0);
    tslib_1.__decorate([
        shared_utils_1.Enumerable(false)
    ], HelixBitsLeaderboardEntry.prototype, "_client", void 0);
    HelixBitsLeaderboardEntry = tslib_1.__decorate([
        twitch_common_1.rtfm('twitch', 'HelixBitsLeaderboardEntry', 'userId')
    ], HelixBitsLeaderboardEntry);
    return HelixBitsLeaderboardEntry;
***REMOVED***());
exports.HelixBitsLeaderboardEntry = HelixBitsLeaderboardEntry;
