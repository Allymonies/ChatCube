import type ***REMOVED*** ApiClient ***REMOVED*** from '../../../ApiClient';
import type ***REMOVED*** HelixPaginatedRequest ***REMOVED*** from '../HelixPaginatedRequest';
import type ***REMOVED*** HelixPaginatedResult ***REMOVED*** from '../HelixPaginatedResult';
import type ***REMOVED*** HelixPagination ***REMOVED*** from '../HelixPagination';
import type ***REMOVED*** HelixStream, HelixStreamData ***REMOVED*** from '../Stream/HelixStream';
export interface HelixGameData ***REMOVED***
    id: string;
    name: string;
    box_art_url: string;
***REMOVED***
/**
 * A game as displayed on Twitch.
 */
export declare class HelixGame ***REMOVED***
    private readonly _data;
    private readonly _client;
    /** @private */
    constructor(data: HelixGameData, client: ApiClient);
    /**
     * The ID of the game.
     */
    get id(): string;
    /**
     * The name of the game.
     */
    get name(): string;
    /**
     * The URL of the box art of the game.
     */
    get boxArtUrl(): string;
    /**
     * Retrieves streams that are currently playing the game.
     */
    getStreams(pagination?: HelixPagination): Promise<HelixPaginatedResult<HelixStream>>;
    /**
     * Creates a paginator for streams that are currently playing the game.
     */
    getStreamsPaginated(): HelixPaginatedRequest<HelixStreamData, HelixStream>;
***REMOVED***
