var __tsu = ***REMOVED***
    cache: [],
    defineExport: function (name, def) ***REMOVED***
        Object.defineProperty(exports, name, def);
        this.cache.push(***REMOVED*** name: name, def: def ***REMOVED***);
***REMOVED***
    redefineExports: function () ***REMOVED***
        this.cache.forEach(function (exp) ***REMOVED***
            Object.defineProperty(exports, exp.name, exp.def);
        ***REMOVED***);
    ***REMOVED***
***REMOVED***;
"use strict";
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
var tslib_1 = require("tslib");
var twitch_api_call_1 = require("twitch-api-call");
var twitch_common_1 = require("twitch-common");
var BaseApi_1 = require("../../BaseApi");
var HelixPaginatedRequest_1 = require("../HelixPaginatedRequest");
var HelixPaginatedResult_1 = require("../HelixPaginatedResult");
var HelixHypeTrainEvent_1 = require("./HelixHypeTrainEvent");
/**
 * The Helix API methods that deal with Hype Trains.
 *
 * Can be accessed using `client.helix.hypeTrain` on an ***REMOVED***@ApiClient***REMOVED*** instance.
 *
 * ## Example
 * ```ts
 * const api = new ApiClient(new StaticAuthProvider(clientId, accessToken));
 * const ***REMOVED*** data: events ***REMOVED*** = await api.helix.hypeTrain.getHypeTrainEventsForBroadcaster('125328655');
 * ```
 */
var HelixHypeTrainApi = /** @class */ (function (_super) ***REMOVED***
    tslib_1.__extends(HelixHypeTrainApi, _super);
    function HelixHypeTrainApi() ***REMOVED***
        return _super !== null && _super.apply(this, arguments) || this;
    ***REMOVED***
    /**
     * Retrieves the events of the current or latest Hype Train for the specified broadcaster.
     *
     * @param broadcaster The broadcaster to fetch Hype Train events for.
     * @param pagination
     *
     * @expandParams
     */
    HelixHypeTrainApi.prototype.getHypeTrainEventsForBroadcaster = function (broadcaster, pagination) ***REMOVED***
        if (pagination === void 0) ***REMOVED*** pagination = ***REMOVED******REMOVED***; ***REMOVED***
        return tslib_1.__awaiter(this, void 0, void 0, function () ***REMOVED***
            var after, _a, limit, result;
            return tslib_1.__generator(this, function (_b) ***REMOVED***
                switch (_b.label) ***REMOVED***
                    case 0:
                        after = pagination.after, _a = pagination.limit, limit = _a === void 0 ? '20' : _a;
                        return [4 /*yield*/, this._client.callApi(***REMOVED***
                                type: twitch_api_call_1.TwitchApiCallType.Helix,
                                url: 'hypetrain/events',
                                scope: 'channel:read:hype_train',
                                query: ***REMOVED***
                                    broadcaster_id: twitch_common_1.extractUserId(broadcaster),
                                    after: after,
                                    first: limit
                                ***REMOVED***
                            ***REMOVED***)];
                    case 1:
                        result = _b.sent();
                        return [2 /*return*/, HelixPaginatedResult_1.createPaginatedResult(result, HelixHypeTrainEvent_1.HelixHypeTrainEvent, this._client)];
                ***REMOVED***
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    /**
     * Creates a paginator for the events of the current or latest Hype Train for the specified broadcaster.
     *
     * @param broadcaster The broadcaster to fetch Hype Train events for.
     */
    HelixHypeTrainApi.prototype.getHypeTrainEventsForBroadcasterPaginated = function (broadcaster) ***REMOVED***
        var _this = this;
        return new HelixPaginatedRequest_1.HelixPaginatedRequest(***REMOVED***
            url: 'hypetrain/events',
            scope: 'channel:read:hype_train',
            query: ***REMOVED***
                broadcaster_id: twitch_common_1.extractUserId(broadcaster)
            ***REMOVED***
    ***REMOVED*** this._client, function (data) ***REMOVED***
            return new HelixHypeTrainEvent_1.HelixHypeTrainEvent(data, _this._client);
        ***REMOVED***);
    ***REMOVED***;
    /**
     * Retrieves a single Hype Train event by ID.
     *
     * @param id The ID of the Hype Train event.
     */
    HelixHypeTrainApi.prototype.getHypeTrainEventById = function (id) ***REMOVED***
        return tslib_1.__awaiter(this, void 0, void 0, function () ***REMOVED***
            var result;
            return tslib_1.__generator(this, function (_a) ***REMOVED***
                switch (_a.label) ***REMOVED***
                    case 0: return [4 /*yield*/, this._client.callApi(***REMOVED***
                            type: twitch_api_call_1.TwitchApiCallType.Helix,
                            url: 'hypetrain/events',
                            scope: 'channel:read:hype_train',
                            query: ***REMOVED***
                                id: id
                            ***REMOVED***
                        ***REMOVED***)];
                    case 1:
                        result = _a.sent();
                        return [2 /*return*/, result.data.length ? new HelixHypeTrainEvent_1.HelixHypeTrainEvent(result.data[0], this._client) : null];
                ***REMOVED***
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    return HelixHypeTrainApi;
***REMOVED***(BaseApi_1.BaseApi));
exports.default = HelixHypeTrainApi;
module.exports = exports = HelixHypeTrainApi;
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
__tsu.redefineExports();
exports.default = HelixHypeTrainApi;
