import type ***REMOVED*** ApiClient ***REMOVED*** from '../../../ApiClient';
import type ***REMOVED*** HelixUser ***REMOVED*** from '../User/HelixUser';
import type ***REMOVED*** HelixScheduleSegmentData ***REMOVED*** from './HelixScheduleSegment';
import ***REMOVED*** HelixScheduleSegment ***REMOVED*** from './HelixScheduleSegment';
/** @private */
export interface HelixScheduleVacationData ***REMOVED***
    start_time: string;
    end_time: string;
***REMOVED***
/** @private */
export interface HelixScheduleData ***REMOVED***
    segments: HelixScheduleSegmentData[];
    broadcaster_id: string;
    broadcaster_name: string;
    broadcaster_login: string;
    vacation: HelixScheduleVacationData | null;
***REMOVED***
/** @private */
export interface HelixScheduleResponse ***REMOVED***
    data: HelixScheduleData;
    pagination: ***REMOVED***
        cursor?: string;
    ***REMOVED***;
***REMOVED***
/**
 * A schedule of a channel.
 */
export declare class HelixSchedule ***REMOVED***
    private readonly _data;
    private readonly _client;
    /** @private */
    constructor(data: HelixScheduleData, client: ApiClient);
    /**
     * The segments of the schedule.
     */
    get segments(): HelixScheduleSegment[];
    /**
     * The ID of the broadcaster.
     */
    get broadcasterId(): string;
    /**
     * The name of the broadcaster.
     */
    get broadcasterName(): string;
    /**
     * The display name of the broadcaster.
     */
    get broadcasterDisplayName(): string;
    /**
     * Retrieves more information about the broadcaster.
     */
    getBroadcaster(): Promise<HelixUser>;
    /**
     * The date when the current vacation started, or null if the schedule is not in vacation mode.
     */
    get vacationStartDate(): Date | null;
    /**
     * The date when the current vacation ends, or null if the schedule is not in vacation mode.
     */
    get vacationEndDate(): Date | null;
***REMOVED***
