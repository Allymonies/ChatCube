"use strict";
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
exports.HelixPaginatedScheduleSegmentRequest = void 0;
var tslib_1 = require("tslib");
var twitch_common_1 = require("twitch-common");
var HelixPaginatedRequest_1 = require("../HelixPaginatedRequest");
var HelixScheduleSegment_1 = require("./HelixScheduleSegment");
/**
 * A paginator specifically for schedule segments.
 */
var HelixPaginatedScheduleSegmentRequest = /** @class */ (function (_super) ***REMOVED***
    tslib_1.__extends(HelixPaginatedScheduleSegmentRequest, _super);
    /** @private */
    function HelixPaginatedScheduleSegmentRequest(broadcaster, client, filter) ***REMOVED***
        var _a;
        return _super.call(this, ***REMOVED***
            url: 'schedule',
            query: ***REMOVED***
                broadcaster_id: twitch_common_1.extractUserId(broadcaster),
                start_time: filter === null || filter === void 0 ? void 0 : filter.startDate,
                utc_offset: (_a = filter === null || filter === void 0 ? void 0 : filter.utcOffset) === null || _a === void 0 ? void 0 : _a.toString()
            ***REMOVED***
    ***REMOVED*** client, function (data) ***REMOVED*** return new HelixScheduleSegment_1.HelixScheduleSegment(data, client); ***REMOVED***, 25) || this;
    ***REMOVED***
    // sadly, this hack is necessary to work around the weird data model of schedules
    // while still keeping the pagination code as generic as possible
    /** @private */
    HelixPaginatedScheduleSegmentRequest.prototype._fetchData = function (additionalOptions) ***REMOVED***
        if (additionalOptions === void 0) ***REMOVED*** additionalOptions = ***REMOVED******REMOVED***; ***REMOVED***
        return tslib_1.__awaiter(this, void 0, void 0, function () ***REMOVED***
            var origData;
            return tslib_1.__generator(this, function (_a) ***REMOVED***
                switch (_a.label) ***REMOVED***
                    case 0: return [4 /*yield*/, _super.prototype._fetchData.call(this, additionalOptions)];
                    case 1:
                        origData = (_a.sent());
                        return [2 /*return*/, ***REMOVED***
                                data: origData.data.segments,
                                pagination: origData.pagination
                            ***REMOVED***];
                ***REMOVED***
            ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***;
    return HelixPaginatedScheduleSegmentRequest;
***REMOVED***(HelixPaginatedRequest_1.HelixPaginatedRequest));
exports.HelixPaginatedScheduleSegmentRequest = HelixPaginatedScheduleSegmentRequest;
