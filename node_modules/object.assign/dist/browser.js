(function()***REMOVED***function r(e,n,t)***REMOVED***function o(i,f)***REMOVED***if(!n[i])***REMOVED***if(!e[i])***REMOVED***var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a***REMOVED***var p=n[i]=***REMOVED***exports:***REMOVED******REMOVED******REMOVED***;e[i][0].call(p.exports,function(r)***REMOVED***var n=e[i][1][r];return o(n||r)***REMOVED***,p,p.exports,r,e,n,t)***REMOVED***return n[i].exports***REMOVED***for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o***REMOVED***return r***REMOVED***)()(***REMOVED***1:[function(require,module,exports)***REMOVED***
'use strict';

var keys = require('object-keys').shim();
delete keys.shim;

var assign = require('./');

module.exports = assign.shim();

delete assign.shim;

***REMOVED***,***REMOVED***"./":3,"object-keys":14***REMOVED***],2:[function(require,module,exports)***REMOVED***
'use strict';

// modified from https://github.com/es-shims/es6-shim
var keys = require('object-keys');
var canBeObject = function (obj) ***REMOVED***
	return typeof obj !== 'undefined' && obj !== null;
***REMOVED***;
var hasSymbols = require('has-symbols/shams')();
var callBound = require('call-bind/callBound');
var toObject = Object;
var $push = callBound('Array.prototype.push');
var $propIsEnumerable = callBound('Object.prototype.propertyIsEnumerable');
var originalGetSymbols = hasSymbols ? Object.getOwnPropertySymbols : null;

// eslint-disable-next-line no-unused-vars
module.exports = function assign(target, source1) ***REMOVED***
	if (!canBeObject(target)) ***REMOVED*** throw new TypeError('target must be an object'); ***REMOVED***
	var objTarget = toObject(target);
	var s, source, i, props, syms, value, key;
	for (s = 1; s < arguments.length; ++s) ***REMOVED***
		source = toObject(arguments[s]);
		props = keys(source);
		var getSymbols = hasSymbols && (Object.getOwnPropertySymbols || originalGetSymbols);
		if (getSymbols) ***REMOVED***
			syms = getSymbols(source);
			for (i = 0; i < syms.length; ++i) ***REMOVED***
				key = syms[i];
				if ($propIsEnumerable(source, key)) ***REMOVED***
					$push(props, key);
				***REMOVED***
			***REMOVED***
		***REMOVED***
		for (i = 0; i < props.length; ++i) ***REMOVED***
			key = props[i];
			value = source[key];
			if ($propIsEnumerable(source, key)) ***REMOVED***
				objTarget[key] = value;
			***REMOVED***
		***REMOVED***
	***REMOVED***
	return objTarget;
***REMOVED***;

***REMOVED***,***REMOVED***"call-bind/callBound":4,"has-symbols/shams":11,"object-keys":14***REMOVED***],3:[function(require,module,exports)***REMOVED***
'use strict';

var defineProperties = require('define-properties');
var callBind = require('call-bind');

var implementation = require('./implementation');
var getPolyfill = require('./polyfill');
var shim = require('./shim');

var polyfill = callBind.apply(getPolyfill());
// eslint-disable-next-line no-unused-vars
var bound = function assign(target, source1) ***REMOVED***
	return polyfill(Object, arguments);
***REMOVED***;

defineProperties(bound, ***REMOVED***
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
***REMOVED***);

module.exports = bound;

***REMOVED***,***REMOVED***"./implementation":2,"./polyfill":16,"./shim":17,"call-bind":5,"define-properties":6***REMOVED***],4:[function(require,module,exports)***REMOVED***
'use strict';

var GetIntrinsic = require('get-intrinsic');

var callBind = require('./');

var $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));

module.exports = function callBoundIntrinsic(name, allowMissing) ***REMOVED***
	var intrinsic = GetIntrinsic(name, !!allowMissing);
	if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) ***REMOVED***
		return callBind(intrinsic);
	***REMOVED***
	return intrinsic;
***REMOVED***;

***REMOVED***,***REMOVED***"./":5,"get-intrinsic":9***REMOVED***],5:[function(require,module,exports)***REMOVED***
'use strict';

var bind = require('function-bind');
var GetIntrinsic = require('get-intrinsic');

var $apply = GetIntrinsic('%Function.prototype.apply%');
var $call = GetIntrinsic('%Function.prototype.call%');
var $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);

var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);

if ($defineProperty) ***REMOVED***
	try ***REMOVED***
		$defineProperty(***REMOVED******REMOVED***, 'a', ***REMOVED*** value: 1 ***REMOVED***);
	***REMOVED*** catch (e) ***REMOVED***
		// IE 8 has a broken defineProperty
		$defineProperty = null;
	***REMOVED***
***REMOVED***

module.exports = function callBind() ***REMOVED***
	return $reflectApply(bind, $call, arguments);
***REMOVED***;

var applyBind = function applyBind() ***REMOVED***
	return $reflectApply(bind, $apply, arguments);
***REMOVED***;

if ($defineProperty) ***REMOVED***
	$defineProperty(module.exports, 'apply', ***REMOVED*** value: applyBind ***REMOVED***);
***REMOVED*** else ***REMOVED***
	module.exports.apply = applyBind;
***REMOVED***

***REMOVED***,***REMOVED***"function-bind":8,"get-intrinsic":9***REMOVED***],6:[function(require,module,exports)***REMOVED***
'use strict';

var keys = require('object-keys');
var hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';

var toStr = Object.prototype.toString;
var concat = Array.prototype.concat;
var origDefineProperty = Object.defineProperty;

var isFunction = function (fn) ***REMOVED***
	return typeof fn === 'function' && toStr.call(fn) === '[object Function]';
***REMOVED***;

var arePropertyDescriptorsSupported = function () ***REMOVED***
	var obj = ***REMOVED******REMOVED***;
	try ***REMOVED***
		origDefineProperty(obj, 'x', ***REMOVED*** enumerable: false, value: obj ***REMOVED***);
		// eslint-disable-next-line no-unused-vars, no-restricted-syntax
		for (var _ in obj) ***REMOVED*** // jscs:ignore disallowUnusedVariables
			return false;
		***REMOVED***
		return obj.x === obj;
	***REMOVED*** catch (e) ***REMOVED*** /* this is IE 8. */
		return false;
	***REMOVED***
***REMOVED***;
var supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();

var defineProperty = function (object, name, value, predicate) ***REMOVED***
	if (name in object && (!isFunction(predicate) || !predicate())) ***REMOVED***
		return;
	***REMOVED***
	if (supportsDescriptors) ***REMOVED***
		origDefineProperty(object, name, ***REMOVED***
			configurable: true,
			enumerable: false,
			value: value,
			writable: true
		***REMOVED***);
	***REMOVED*** else ***REMOVED***
		object[name] = value;
	***REMOVED***
***REMOVED***;

var defineProperties = function (object, map) ***REMOVED***
	var predicates = arguments.length > 2 ? arguments[2] : ***REMOVED******REMOVED***;
	var props = keys(map);
	if (hasSymbols) ***REMOVED***
		props = concat.call(props, Object.getOwnPropertySymbols(map));
	***REMOVED***
	for (var i = 0; i < props.length; i += 1) ***REMOVED***
		defineProperty(object, props[i], map[props[i]], predicates[props[i]]);
	***REMOVED***
***REMOVED***;

defineProperties.supportsDescriptors = !!supportsDescriptors;

module.exports = defineProperties;

***REMOVED***,***REMOVED***"object-keys":14***REMOVED***],7:[function(require,module,exports)***REMOVED***
'use strict';

/* eslint no-invalid-this: 1 */

var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var slice = Array.prototype.slice;
var toStr = Object.prototype.toString;
var funcType = '[object Function]';

module.exports = function bind(that) ***REMOVED***
    var target = this;
    if (typeof target !== 'function' || toStr.call(target) !== funcType) ***REMOVED***
        throw new TypeError(ERROR_MESSAGE + target);
    ***REMOVED***
    var args = slice.call(arguments, 1);

    var bound;
    var binder = function () ***REMOVED***
        if (this instanceof bound) ***REMOVED***
            var result = target.apply(
                this,
                args.concat(slice.call(arguments))
            );
            if (Object(result) === result) ***REMOVED***
                return result;
            ***REMOVED***
            return this;
        ***REMOVED*** else ***REMOVED***
            return target.apply(
                that,
                args.concat(slice.call(arguments))
            );
        ***REMOVED***
    ***REMOVED***;

    var boundLength = Math.max(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0; i < boundLength; i++) ***REMOVED***
        boundArgs.push('$' + i);
    ***REMOVED***

    bound = Function('binder', 'return function (' + boundArgs.join(',') + ')***REMOVED*** return binder.apply(this,arguments); ***REMOVED***')(binder);

    if (target.prototype) ***REMOVED***
        var Empty = function Empty() ***REMOVED******REMOVED***;
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    ***REMOVED***

    return bound;
***REMOVED***;

***REMOVED***,***REMOVED******REMOVED***],8:[function(require,module,exports)***REMOVED***
'use strict';

var implementation = require('./implementation');

module.exports = Function.prototype.bind || implementation;

***REMOVED***,***REMOVED***"./implementation":7***REMOVED***],9:[function(require,module,exports)***REMOVED***
'use strict';

/* globals
	AggregateError,
	Atomics,
	FinalizationRegistry,
	SharedArrayBuffer,
	WeakRef,
*/

var undefined;

var $SyntaxError = SyntaxError;
var $Function = Function;
var $TypeError = TypeError;

// eslint-disable-next-line consistent-return
var getEvalledConstructor = function (expressionSyntax) ***REMOVED***
	try ***REMOVED***
		// eslint-disable-next-line no-new-func
		return Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
	***REMOVED*** catch (e) ***REMOVED******REMOVED***
***REMOVED***;

var $gOPD = Object.getOwnPropertyDescriptor;
if ($gOPD) ***REMOVED***
	try ***REMOVED***
		$gOPD(***REMOVED******REMOVED***, '');
	***REMOVED*** catch (e) ***REMOVED***
		$gOPD = null; // this is IE 8, which has a broken gOPD
	***REMOVED***
***REMOVED***

var throwTypeError = function () ***REMOVED***
	throw new $TypeError();
***REMOVED***;
var ThrowTypeError = $gOPD
	? (function () ***REMOVED***
		try ***REMOVED***
			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
			arguments.callee; // IE 8 does not throw here
			return throwTypeError;
		***REMOVED*** catch (calleeThrows) ***REMOVED***
			try ***REMOVED***
				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
				return $gOPD(arguments, 'callee').get;
			***REMOVED*** catch (gOPDthrows) ***REMOVED***
				return throwTypeError;
			***REMOVED***
		***REMOVED***
	***REMOVED***())
	: throwTypeError;

var hasSymbols = require('has-symbols')();

var getProto = Object.getPrototypeOf || function (x) ***REMOVED*** return x.__proto__; ***REMOVED***; // eslint-disable-line no-proto

var asyncGenFunction = getEvalledConstructor('async function* () ***REMOVED******REMOVED***');
var asyncGenFunctionPrototype = asyncGenFunction ? asyncGenFunction.prototype : undefined;
var asyncGenPrototype = asyncGenFunctionPrototype ? asyncGenFunctionPrototype.prototype : undefined;

var TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);

var INTRINSICS = ***REMOVED***
	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
	'%Array%': Array,
	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
	'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,
	'%AsyncFromSyncIteratorPrototype%': undefined,
	'%AsyncFunction%': getEvalledConstructor('async function () ***REMOVED******REMOVED***'),
	'%AsyncGenerator%': asyncGenFunctionPrototype,
	'%AsyncGeneratorFunction%': asyncGenFunction,
	'%AsyncIteratorPrototype%': asyncGenPrototype ? getProto(asyncGenPrototype) : undefined,
	'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
	'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
	'%Boolean%': Boolean,
	'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
	'%Date%': Date,
	'%decodeURI%': decodeURI,
	'%decodeURIComponent%': decodeURIComponent,
	'%encodeURI%': encodeURI,
	'%encodeURIComponent%': encodeURIComponent,
	'%Error%': Error,
	'%eval%': eval, // eslint-disable-line no-eval
	'%EvalError%': EvalError,
	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
	'%Function%': $Function,
	'%GeneratorFunction%': getEvalledConstructor('function* () ***REMOVED******REMOVED***'),
	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
	'%isFinite%': isFinite,
	'%isNaN%': isNaN,
	'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,
	'%JSON%': typeof JSON === 'object' ? JSON : undefined,
	'%Map%': typeof Map === 'undefined' ? undefined : Map,
	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),
	'%Math%': Math,
	'%Number%': Number,
	'%Object%': Object,
	'%parseFloat%': parseFloat,
	'%parseInt%': parseInt,
	'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
	'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
	'%RangeError%': RangeError,
	'%ReferenceError%': ReferenceError,
	'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
	'%RegExp%': RegExp,
	'%Set%': typeof Set === 'undefined' ? undefined : Set,
	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),
	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
	'%String%': String,
	'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,
	'%Symbol%': hasSymbols ? Symbol : undefined,
	'%SyntaxError%': $SyntaxError,
	'%ThrowTypeError%': ThrowTypeError,
	'%TypedArray%': TypedArray,
	'%TypeError%': $TypeError,
	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
	'%URIError%': URIError,
	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet
***REMOVED***;

var LEGACY_ALIASES = ***REMOVED***
	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
	'%ArrayPrototype%': ['Array', 'prototype'],
	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
	'%BooleanPrototype%': ['Boolean', 'prototype'],
	'%DataViewPrototype%': ['DataView', 'prototype'],
	'%DatePrototype%': ['Date', 'prototype'],
	'%ErrorPrototype%': ['Error', 'prototype'],
	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
	'%FunctionPrototype%': ['Function', 'prototype'],
	'%Generator%': ['GeneratorFunction', 'prototype'],
	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
	'%JSONParse%': ['JSON', 'parse'],
	'%JSONStringify%': ['JSON', 'stringify'],
	'%MapPrototype%': ['Map', 'prototype'],
	'%NumberPrototype%': ['Number', 'prototype'],
	'%ObjectPrototype%': ['Object', 'prototype'],
	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
	'%PromisePrototype%': ['Promise', 'prototype'],
	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
	'%Promise_all%': ['Promise', 'all'],
	'%Promise_reject%': ['Promise', 'reject'],
	'%Promise_resolve%': ['Promise', 'resolve'],
	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
	'%RegExpPrototype%': ['RegExp', 'prototype'],
	'%SetPrototype%': ['Set', 'prototype'],
	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
	'%StringPrototype%': ['String', 'prototype'],
	'%SymbolPrototype%': ['Symbol', 'prototype'],
	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
	'%URIErrorPrototype%': ['URIError', 'prototype'],
	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
	'%WeakSetPrototype%': ['WeakSet', 'prototype']
***REMOVED***;

var bind = require('function-bind');
var hasOwn = require('has');
var $concat = bind.call(Function.call, Array.prototype.concat);
var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
var $replace = bind.call(Function.call, String.prototype.replace);

/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */
var stringToPath = function stringToPath(string) ***REMOVED***
	var result = [];
	$replace(string, rePropName, function (match, number, quote, subString) ***REMOVED***
		result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
	***REMOVED***);
	return result;
***REMOVED***;
/* end adaptation */

var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) ***REMOVED***
	var intrinsicName = name;
	var alias;
	if (hasOwn(LEGACY_ALIASES, intrinsicName)) ***REMOVED***
		alias = LEGACY_ALIASES[intrinsicName];
		intrinsicName = '%' + alias[0] + '%';
	***REMOVED***

	if (hasOwn(INTRINSICS, intrinsicName)) ***REMOVED***
		var value = INTRINSICS[intrinsicName];
		if (typeof value === 'undefined' && !allowMissing) ***REMOVED***
			throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
		***REMOVED***

		return ***REMOVED***
			alias: alias,
			name: intrinsicName,
			value: value
		***REMOVED***;
	***REMOVED***

	throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
***REMOVED***;

module.exports = function GetIntrinsic(name, allowMissing) ***REMOVED***
	if (typeof name !== 'string' || name.length === 0) ***REMOVED***
		throw new $TypeError('intrinsic name must be a non-empty string');
	***REMOVED***
	if (arguments.length > 1 && typeof allowMissing !== 'boolean') ***REMOVED***
		throw new $TypeError('"allowMissing" argument must be a boolean');
	***REMOVED***

	var parts = stringToPath(name);
	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

	var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
	var intrinsicRealName = intrinsic.name;
	var value = intrinsic.value;
	var skipFurtherCaching = false;

	var alias = intrinsic.alias;
	if (alias) ***REMOVED***
		intrinsicBaseName = alias[0];
		$spliceApply(parts, $concat([0, 1], alias));
	***REMOVED***

	for (var i = 1, isOwn = true; i < parts.length; i += 1) ***REMOVED***
		var part = parts[i];
		if (part === 'constructor' || !isOwn) ***REMOVED***
			skipFurtherCaching = true;
		***REMOVED***

		intrinsicBaseName += '.' + part;
		intrinsicRealName = '%' + intrinsicBaseName + '%';

		if (hasOwn(INTRINSICS, intrinsicRealName)) ***REMOVED***
			value = INTRINSICS[intrinsicRealName];
		***REMOVED*** else if (value != null) ***REMOVED***
			if ($gOPD && (i + 1) >= parts.length) ***REMOVED***
				var desc = $gOPD(value, part);
				isOwn = !!desc;

				if (!allowMissing && !(part in value)) ***REMOVED***
					throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
				***REMOVED***
				// By convention, when a data property is converted to an accessor
				// property to emulate a data property that does not suffer from
				// the override mistake, that accessor's getter is marked with
				// an `originalValue` property. Here, when we detect this, we
				// uphold the illusion by pretending to see that original data
				// property, i.e., returning the value rather than the getter
				// itself.
				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) ***REMOVED***
					value = desc.get;
				***REMOVED*** else ***REMOVED***
					value = value[part];
				***REMOVED***
			***REMOVED*** else ***REMOVED***
				isOwn = hasOwn(value, part);
				value = value[part];
			***REMOVED***

			if (isOwn && !skipFurtherCaching) ***REMOVED***
				INTRINSICS[intrinsicRealName] = value;
			***REMOVED***
		***REMOVED***
	***REMOVED***
	return value;
***REMOVED***;

***REMOVED***,***REMOVED***"function-bind":8,"has":12,"has-symbols":10***REMOVED***],10:[function(require,module,exports)***REMOVED***
(function (global)***REMOVED***(function ()***REMOVED***
'use strict';

var origSymbol = global.Symbol;
var hasSymbolSham = require('./shams');

module.exports = function hasNativeSymbols() ***REMOVED***
	if (typeof origSymbol !== 'function') ***REMOVED*** return false; ***REMOVED***
	if (typeof Symbol !== 'function') ***REMOVED*** return false; ***REMOVED***
	if (typeof origSymbol('foo') !== 'symbol') ***REMOVED*** return false; ***REMOVED***
	if (typeof Symbol('bar') !== 'symbol') ***REMOVED*** return false; ***REMOVED***

	return hasSymbolSham();
***REMOVED***;

***REMOVED***).call(this)***REMOVED***).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : ***REMOVED******REMOVED***)
***REMOVED***,***REMOVED***"./shams":11***REMOVED***],11:[function(require,module,exports)***REMOVED***
'use strict';

/* eslint complexity: [2, 18], max-statements: [2, 33] */
module.exports = function hasSymbols() ***REMOVED***
	if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') ***REMOVED*** return false; ***REMOVED***
	if (typeof Symbol.iterator === 'symbol') ***REMOVED*** return true; ***REMOVED***

	var obj = ***REMOVED******REMOVED***;
	var sym = Symbol('test');
	var symObj = Object(sym);
	if (typeof sym === 'string') ***REMOVED*** return false; ***REMOVED***

	if (Object.prototype.toString.call(sym) !== '[object Symbol]') ***REMOVED*** return false; ***REMOVED***
	if (Object.prototype.toString.call(symObj) !== '[object Symbol]') ***REMOVED*** return false; ***REMOVED***

	// temp disabled per https://github.com/ljharb/object.assign/issues/17
	// if (sym instanceof Symbol) ***REMOVED*** return false; ***REMOVED***
	// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
	// if (!(symObj instanceof Symbol)) ***REMOVED*** return false; ***REMOVED***

	// if (typeof Symbol.prototype.toString !== 'function') ***REMOVED*** return false; ***REMOVED***
	// if (String(sym) !== Symbol.prototype.toString.call(sym)) ***REMOVED*** return false; ***REMOVED***

	var symVal = 42;
	obj[sym] = symVal;
	for (sym in obj) ***REMOVED*** return false; ***REMOVED*** // eslint-disable-line no-restricted-syntax
	if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) ***REMOVED*** return false; ***REMOVED***

	if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) ***REMOVED*** return false; ***REMOVED***

	var syms = Object.getOwnPropertySymbols(obj);
	if (syms.length !== 1 || syms[0] !== sym) ***REMOVED*** return false; ***REMOVED***

	if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) ***REMOVED*** return false; ***REMOVED***

	if (typeof Object.getOwnPropertyDescriptor === 'function') ***REMOVED***
		var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
		if (descriptor.value !== symVal || descriptor.enumerable !== true) ***REMOVED*** return false; ***REMOVED***
	***REMOVED***

	return true;
***REMOVED***;

***REMOVED***,***REMOVED******REMOVED***],12:[function(require,module,exports)***REMOVED***
'use strict';

var bind = require('function-bind');

module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);

***REMOVED***,***REMOVED***"function-bind":8***REMOVED***],13:[function(require,module,exports)***REMOVED***
'use strict';

var keysShim;
if (!Object.keys) ***REMOVED***
	// modified from https://github.com/es-shims/es5-shim
	var has = Object.prototype.hasOwnProperty;
	var toStr = Object.prototype.toString;
	var isArgs = require('./isArguments'); // eslint-disable-line global-require
	var isEnumerable = Object.prototype.propertyIsEnumerable;
	var hasDontEnumBug = !isEnumerable.call(***REMOVED*** toString: null ***REMOVED***, 'toString');
	var hasProtoEnumBug = isEnumerable.call(function () ***REMOVED******REMOVED***, 'prototype');
	var dontEnums = [
		'toString',
		'toLocaleString',
		'valueOf',
		'hasOwnProperty',
		'isPrototypeOf',
		'propertyIsEnumerable',
		'constructor'
	];
	var equalsConstructorPrototype = function (o) ***REMOVED***
		var ctor = o.constructor;
		return ctor && ctor.prototype === o;
	***REMOVED***;
	var excludedKeys = ***REMOVED***
		$applicationCache: true,
		$console: true,
		$external: true,
		$frame: true,
		$frameElement: true,
		$frames: true,
		$innerHeight: true,
		$innerWidth: true,
		$onmozfullscreenchange: true,
		$onmozfullscreenerror: true,
		$outerHeight: true,
		$outerWidth: true,
		$pageXOffset: true,
		$pageYOffset: true,
		$parent: true,
		$scrollLeft: true,
		$scrollTop: true,
		$scrollX: true,
		$scrollY: true,
		$self: true,
		$webkitIndexedDB: true,
		$webkitStorageInfo: true,
		$window: true
	***REMOVED***;
	var hasAutomationEqualityBug = (function () ***REMOVED***
		/* global window */
		if (typeof window === 'undefined') ***REMOVED*** return false; ***REMOVED***
		for (var k in window) ***REMOVED***
			try ***REMOVED***
				if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') ***REMOVED***
					try ***REMOVED***
						equalsConstructorPrototype(window[k]);
					***REMOVED*** catch (e) ***REMOVED***
						return true;
					***REMOVED***
				***REMOVED***
			***REMOVED*** catch (e) ***REMOVED***
				return true;
			***REMOVED***
		***REMOVED***
		return false;
	***REMOVED***());
	var equalsConstructorPrototypeIfNotBuggy = function (o) ***REMOVED***
		/* global window */
		if (typeof window === 'undefined' || !hasAutomationEqualityBug) ***REMOVED***
			return equalsConstructorPrototype(o);
		***REMOVED***
		try ***REMOVED***
			return equalsConstructorPrototype(o);
		***REMOVED*** catch (e) ***REMOVED***
			return false;
		***REMOVED***
	***REMOVED***;

	keysShim = function keys(object) ***REMOVED***
		var isObject = object !== null && typeof object === 'object';
		var isFunction = toStr.call(object) === '[object Function]';
		var isArguments = isArgs(object);
		var isString = isObject && toStr.call(object) === '[object String]';
		var theKeys = [];

		if (!isObject && !isFunction && !isArguments) ***REMOVED***
			throw new TypeError('Object.keys called on a non-object');
		***REMOVED***

		var skipProto = hasProtoEnumBug && isFunction;
		if (isString && object.length > 0 && !has.call(object, 0)) ***REMOVED***
			for (var i = 0; i < object.length; ++i) ***REMOVED***
				theKeys.push(String(i));
			***REMOVED***
		***REMOVED***

		if (isArguments && object.length > 0) ***REMOVED***
			for (var j = 0; j < object.length; ++j) ***REMOVED***
				theKeys.push(String(j));
			***REMOVED***
		***REMOVED*** else ***REMOVED***
			for (var name in object) ***REMOVED***
				if (!(skipProto && name === 'prototype') && has.call(object, name)) ***REMOVED***
					theKeys.push(String(name));
				***REMOVED***
			***REMOVED***
		***REMOVED***

		if (hasDontEnumBug) ***REMOVED***
			var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);

			for (var k = 0; k < dontEnums.length; ++k) ***REMOVED***
				if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) ***REMOVED***
					theKeys.push(dontEnums[k]);
				***REMOVED***
			***REMOVED***
		***REMOVED***
		return theKeys;
	***REMOVED***;
***REMOVED***
module.exports = keysShim;

***REMOVED***,***REMOVED***"./isArguments":15***REMOVED***],14:[function(require,module,exports)***REMOVED***
'use strict';

var slice = Array.prototype.slice;
var isArgs = require('./isArguments');

var origKeys = Object.keys;
var keysShim = origKeys ? function keys(o) ***REMOVED*** return origKeys(o); ***REMOVED*** : require('./implementation');

var originalKeys = Object.keys;

keysShim.shim = function shimObjectKeys() ***REMOVED***
	if (Object.keys) ***REMOVED***
		var keysWorksWithArguments = (function () ***REMOVED***
			// Safari 5.0 bug
			var args = Object.keys(arguments);
			return args && args.length === arguments.length;
		***REMOVED***(1, 2));
		if (!keysWorksWithArguments) ***REMOVED***
			Object.keys = function keys(object) ***REMOVED*** // eslint-disable-line func-name-matching
				if (isArgs(object)) ***REMOVED***
					return originalKeys(slice.call(object));
				***REMOVED***
				return originalKeys(object);
			***REMOVED***;
		***REMOVED***
	***REMOVED*** else ***REMOVED***
		Object.keys = keysShim;
	***REMOVED***
	return Object.keys || keysShim;
***REMOVED***;

module.exports = keysShim;

***REMOVED***,***REMOVED***"./implementation":13,"./isArguments":15***REMOVED***],15:[function(require,module,exports)***REMOVED***
'use strict';

var toStr = Object.prototype.toString;

module.exports = function isArguments(value) ***REMOVED***
	var str = toStr.call(value);
	var isArgs = str === '[object Arguments]';
	if (!isArgs) ***REMOVED***
		isArgs = str !== '[object Array]' &&
			value !== null &&
			typeof value === 'object' &&
			typeof value.length === 'number' &&
			value.length >= 0 &&
			toStr.call(value.callee) === '[object Function]';
	***REMOVED***
	return isArgs;
***REMOVED***;

***REMOVED***,***REMOVED******REMOVED***],16:[function(require,module,exports)***REMOVED***
'use strict';

var implementation = require('./implementation');

var lacksProperEnumerationOrder = function () ***REMOVED***
	if (!Object.assign) ***REMOVED***
		return false;
	***REMOVED***
	/*
	 * v8, specifically in node 4.x, has a bug with incorrect property enumeration order
	 * note: this does not detect the bug unless there's 20 characters
	 */
	var str = 'abcdefghijklmnopqrst';
	var letters = str.split('');
	var map = ***REMOVED******REMOVED***;
	for (var i = 0; i < letters.length; ++i) ***REMOVED***
		map[letters[i]] = letters[i];
	***REMOVED***
	var obj = Object.assign(***REMOVED******REMOVED***, map);
	var actual = '';
	for (var k in obj) ***REMOVED***
		actual += k;
	***REMOVED***
	return str !== actual;
***REMOVED***;

var assignHasPendingExceptions = function () ***REMOVED***
	if (!Object.assign || !Object.preventExtensions) ***REMOVED***
		return false;
	***REMOVED***
	/*
	 * Firefox 37 still has "pending exception" logic in its Object.assign implementation,
	 * which is 72% slower than our shim, and Firefox 40's native implementation.
	 */
	var thrower = Object.preventExtensions(***REMOVED*** 1: 2 ***REMOVED***);
	try ***REMOVED***
		Object.assign(thrower, 'xy');
	***REMOVED*** catch (e) ***REMOVED***
		return thrower[1] === 'y';
	***REMOVED***
	return false;
***REMOVED***;

module.exports = function getPolyfill() ***REMOVED***
	if (!Object.assign) ***REMOVED***
		return implementation;
	***REMOVED***
	if (lacksProperEnumerationOrder()) ***REMOVED***
		return implementation;
	***REMOVED***
	if (assignHasPendingExceptions()) ***REMOVED***
		return implementation;
	***REMOVED***
	return Object.assign;
***REMOVED***;

***REMOVED***,***REMOVED***"./implementation":2***REMOVED***],17:[function(require,module,exports)***REMOVED***
'use strict';

var define = require('define-properties');
var getPolyfill = require('./polyfill');

module.exports = function shimAssign() ***REMOVED***
	var polyfill = getPolyfill();
	define(
		Object,
		***REMOVED*** assign: polyfill ***REMOVED***,
		***REMOVED*** assign: function () ***REMOVED*** return Object.assign !== polyfill; ***REMOVED*** ***REMOVED***
	);
	return polyfill;
***REMOVED***;

***REMOVED***,***REMOVED***"./polyfill":16,"define-properties":6***REMOVED***]***REMOVED***,***REMOVED******REMOVED***,[1]);
