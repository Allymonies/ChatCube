var inspect = require('../');
var test = require('tape');

function withoutProperty(object, property, fn) ***REMOVED***
    var original;
    if (Object.getOwnPropertyDescriptor) ***REMOVED***
        original = Object.getOwnPropertyDescriptor(object, property);
    ***REMOVED*** else ***REMOVED***
        original = object[property];
    ***REMOVED***
    delete object[property];
    try ***REMOVED***
        fn();
    ***REMOVED*** finally ***REMOVED***
        if (Object.getOwnPropertyDescriptor) ***REMOVED***
            Object.defineProperty(object, property, original);
        ***REMOVED*** else ***REMOVED***
            object[property] = original;
        ***REMOVED***
    ***REMOVED***
***REMOVED***

test('when Object#hasOwnProperty is deleted', function (t) ***REMOVED***
    t.plan(1);
    var arr = [1, , 3]; // eslint-disable-line no-sparse-arrays

    // eslint-disable-next-line no-extend-native
    Array.prototype[1] = 2; // this is needed to account for "in" vs "hasOwnProperty"

    withoutProperty(Object.prototype, 'hasOwnProperty', function () ***REMOVED***
        t.equal(inspect(arr), '[ 1, , 3 ]');
    ***REMOVED***);
    delete Array.prototype[1];
***REMOVED***);
