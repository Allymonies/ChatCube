'use strict';

var GetIntrinsic = require('get-intrinsic');
var has = require('has');
var channel = require('side-channel')();

var $TypeError = GetIntrinsic('%TypeError%');

var SLOT = ***REMOVED***
	assert: function (O, slot) ***REMOVED***
		if (!O || (typeof O !== 'object' && typeof O !== 'function')) ***REMOVED***
			throw new $TypeError('`O` is not an object');
		***REMOVED***
		if (typeof slot !== 'string') ***REMOVED***
			throw new $TypeError('`slot` must be a string');
		***REMOVED***
		channel.assert(O);
	***REMOVED***,
	get: function (O, slot) ***REMOVED***
		if (!O || (typeof O !== 'object' && typeof O !== 'function')) ***REMOVED***
			throw new $TypeError('`O` is not an object');
		***REMOVED***
		if (typeof slot !== 'string') ***REMOVED***
			throw new $TypeError('`slot` must be a string');
		***REMOVED***
		var slots = channel.get(O);
		return slots && slots['$' + slot];
	***REMOVED***,
	has: function (O, slot) ***REMOVED***
		if (!O || (typeof O !== 'object' && typeof O !== 'function')) ***REMOVED***
			throw new $TypeError('`O` is not an object');
		***REMOVED***
		if (typeof slot !== 'string') ***REMOVED***
			throw new $TypeError('`slot` must be a string');
		***REMOVED***
		var slots = channel.get(O);
		return !!slots && has(slots, '$' + slot);
	***REMOVED***,
	set: function (O, slot, V) ***REMOVED***
		if (!O || (typeof O !== 'object' && typeof O !== 'function')) ***REMOVED***
			throw new $TypeError('`O` is not an object');
		***REMOVED***
		if (typeof slot !== 'string') ***REMOVED***
			throw new $TypeError('`slot` must be a string');
		***REMOVED***
		var slots = channel.get(O);
		if (!slots) ***REMOVED***
			slots = ***REMOVED******REMOVED***;
			channel.set(O, slots);
		***REMOVED***
		slots['$' + slot] = V;
	***REMOVED***
***REMOVED***;

if (Object.freeze) ***REMOVED***
	Object.freeze(SLOT);
***REMOVED***

module.exports = SLOT;
