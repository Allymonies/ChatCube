var isWindows = typeof process != 'undefined' && 'win32' === process.platform
var EOL = isWindows ? '\r\n' : '\n'

var hits = ***REMOVED******REMOVED***;

function deprecate(methodName, message) ***REMOVED***
  if(deprecate.silence || hits[methodName]) return;
  hits[methodName] = true;

  var _deprecate = typeof process === 'undefined' ? browserDeprecate : nodeDeprecate;
  _deprecate(methodName, message);
***REMOVED***

function nodeDeprecate(methodName, message) ***REMOVED***
  deprecate.stream.write(EOL);
  if(deprecate.color) ***REMOVED***
    deprecate.stream.write(deprecate.color);
  ***REMOVED***
  deprecate.stream.write('Warning: ' + methodName + ' has been deprecated.');
  deprecate.stream.write(EOL);
  for(var i = 1; i < arguments.length; i++) ***REMOVED***
    deprecate.stream.write(arguments[i]);
    deprecate.stream.write(EOL);
  ***REMOVED***
  if(deprecate.color) ***REMOVED***
    deprecate.stream.write('\x1b[0m');
  ***REMOVED***
  deprecate.stream.write(EOL);
  deprecate.stream.write(EOL);
***REMOVED***;

function browserDeprecate(methodName, message) ***REMOVED***
  console.warn(methodName, ' has been deprecated.');
  for(var i = 1; i < arguments.length; i++) ***REMOVED***
    console.log(arguments[i]);
  ***REMOVED***
***REMOVED***

if (typeof process !== 'undefined' && typeof process.stderr !== 'undefined') ***REMOVED***
  deprecate.stream = process.stderr;
  deprecate.color = deprecate.stream.isTTY && '\x1b[31;1m';
***REMOVED***
deprecate.silence = false;

module.exports = deprecate;
module.exports.default = deprecate;
