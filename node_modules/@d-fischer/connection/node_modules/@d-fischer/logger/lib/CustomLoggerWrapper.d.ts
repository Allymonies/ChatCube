import type ***REMOVED*** Logger ***REMOVED*** from './Logger';
import type ***REMOVED*** LoggerOptions ***REMOVED*** from './LoggerOptions';
import ***REMOVED*** LogLevel ***REMOVED*** from './LogLevel';
export interface LoggerOverrideConfig ***REMOVED***
    log: (level: LogLevel, message: string) => void;
    crit?: (message: string) => void;
    error?: (message: string) => void;
    warn?: (message: string) => void;
    info?: (message: string) => void;
    debug?: (message: string) => void;
    trace?: (message: string) => void;
***REMOVED***
export declare type LoggerOverride = LoggerOverrideConfig | ((level: LogLevel, message: string) => void);
export declare class CustomLoggerWrapper implements Logger ***REMOVED***
    private readonly _minLevel?;
    private readonly _override;
    constructor(***REMOVED*** name, minLevel, custom ***REMOVED***: LoggerOptions);
    log(level: LogLevel, message: string): void;
    crit(message: string): void;
    error(message: string): void;
    warn(message: string): void;
    info(message: string): void;
    debug(message: string): void;
    trace(message: string): void;
    private _shouldLog;
***REMOVED***
