import ***REMOVED*** createCacheKey ***REMOVED*** from "../utils/createCacheKey.mjs";
export function CachedGetter(timeInSeconds) ***REMOVED***
    if (timeInSeconds === void 0) ***REMOVED*** timeInSeconds = Infinity; ***REMOVED***
    return function (target, propName, descriptor) ***REMOVED***
        if (descriptor.get) ***REMOVED***
            // eslint-disable-next-line @typescript-eslint/unbound-method
            var origFn_1 = descriptor.get;
            descriptor.get = function () ***REMOVED***
                var cacheKey = createCacheKey(propName, []);
                var cachedValue = this.getFromCache(cacheKey);
                if (cachedValue) ***REMOVED***
                    return cachedValue;
                ***REMOVED***
                var result = origFn_1.call(this);
                this.setCache(cacheKey, result, timeInSeconds);
                return result;
            ***REMOVED***;
        ***REMOVED***
        return descriptor;
    ***REMOVED***;
***REMOVED***
//# sourceMappingURL=CachedGetter.mjs.map