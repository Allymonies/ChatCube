/* eslint-disable @typescript-eslint/naming-convention */
export function Enumerable(enumerable) ***REMOVED***
    if (enumerable === void 0) ***REMOVED*** enumerable = true; ***REMOVED***
    return function (target, key) ***REMOVED***
        // first property defined in prototype, that's why we use getters/setters
        // (otherwise assignment in object will override property in prototype)
        Object.defineProperty(target, key, ***REMOVED***
            get: function () ***REMOVED***
                return;
        ***REMOVED***
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            set: function (val) ***REMOVED***
                // here we have a reference to the instance and can set property directly to it
                Object.defineProperty(this, key, ***REMOVED***
                    value: val,
                    writable: true,
                    enumerable: enumerable
                ***REMOVED***);
        ***REMOVED***
            enumerable: enumerable
        ***REMOVED***);
    ***REMOVED***;
***REMOVED***
//# sourceMappingURL=Enumerable.mjs.map