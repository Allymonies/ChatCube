import type ***REMOVED*** LoggerOptions ***REMOVED*** from '@d-fischer/logger';
import type ***REMOVED*** RateLimiter ***REMOVED*** from './RateLimiter';
export interface TimeBasedRateLimiterConfig<Req, Res> ***REMOVED***
    bucketSize: number;
    timeFrame: number;
    logger?: Partial<LoggerOptions>;
    doRequest: (req: Req) => Promise<Res>;
***REMOVED***
export declare class TimeBasedRateLimiter<Req, Res> implements RateLimiter<Req, Res> ***REMOVED***
    private readonly _queue;
    private _usedFromBucket;
    private readonly _bucketSize;
    private readonly _timeFrame;
    private readonly _callback;
    private readonly _logger;
    constructor(***REMOVED*** logger, bucketSize, timeFrame, doRequest ***REMOVED***: TimeBasedRateLimiterConfig<Req, Res>);
    request(req: Req): Promise<Res>;
    private _runRequest;
    private _runNextRequest;
***REMOVED***
