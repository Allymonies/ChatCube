export interface PromiseResolution<T> ***REMOVED***
    status: 'fulfilled';
    value: T;
***REMOVED***

export interface PromiseRejection<E> ***REMOVED***
    status: 'rejected';
    reason: E;
***REMOVED***

export type PromiseResult<T, E = unknown> = PromiseResolution<T> | PromiseRejection<E>;

export type PromiseTuple<T extends [unknown, ...unknown[]]> = ***REMOVED***[P in keyof T]: Promise<T[P]>***REMOVED***;
export type PromiseResultTuple<T extends [unknown, ...unknown[]]> = ***REMOVED***[P in keyof T]: PromiseResult<T[P]>***REMOVED***;
