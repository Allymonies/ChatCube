'use strict';

var defineProperties = require('define-properties');
var isEnumerable = Object.prototype.propertyIsEnumerable;
var functionsHaveNames = require('functions-have-names')();

var runTests = require('./tests');

module.exports = function (t) ***REMOVED***
	t.equal(Promise.allSettled.length, 1, 'Promise.allSettled has a length of 1');
	t.test('Function name', ***REMOVED*** skip: !functionsHaveNames ***REMOVED***, function (st) ***REMOVED***
		st.equal(Promise.allSettled.name, 'allSettled', 'Promise.allSettled has name "allSettled"');
		st.end();
	***REMOVED***);

	t.test('enumerability', ***REMOVED*** skip: !defineProperties.supportsDescriptors ***REMOVED***, function (et) ***REMOVED***
		et.equal(false, isEnumerable.call(Promise, 'allSettled'), 'Promise.allSettled is not enumerable');
		et.end();
	***REMOVED***);

	var supportsStrictMode = (function () ***REMOVED*** return typeof this === 'undefined'; ***REMOVED***());

	t.test('bad object value', ***REMOVED*** skip: !supportsStrictMode ***REMOVED***, function (st) ***REMOVED***
		st['throws'](function () ***REMOVED*** return Promise.allSettled.call(undefined); ***REMOVED***, TypeError, 'undefined is not an object');
		st['throws'](function () ***REMOVED*** return Promise.allSettled.call(null); ***REMOVED***, TypeError, 'null is not an object');
		st.end();
	***REMOVED***);

	runTests(function allSettled(iterable) ***REMOVED*** return Promise.allSettled.call(typeof this === 'undefined' ? Promise : this, iterable); ***REMOVED***, t);
***REMOVED***;
