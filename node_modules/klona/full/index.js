function set(obj, key, val) ***REMOVED***
	if (typeof val.value === 'object') val.value = klona(val.value);
	if (!val.enumerable || val.get || val.set || !val.configurable || !val.writable || key === '__proto__') ***REMOVED***
		Object.defineProperty(obj, key, val);
	***REMOVED*** else obj[key] = val.value;
***REMOVED***

function klona(x) ***REMOVED***
	if (typeof x !== 'object') return x;

	var i=0, k, list, tmp, str=Object.prototype.toString.call(x);

	if (str === '[object Object]') ***REMOVED***
		tmp = Object.create(x.__proto__ || null);
	***REMOVED*** else if (str === '[object Array]') ***REMOVED***
		tmp = Array(x.length);
	***REMOVED*** else if (str === '[object Set]') ***REMOVED***
		tmp = new Set;
		x.forEach(function (val) ***REMOVED***
			tmp.add(klona(val));
		***REMOVED***);
	***REMOVED*** else if (str === '[object Map]') ***REMOVED***
		tmp = new Map;
		x.forEach(function (val, key) ***REMOVED***
			tmp.set(klona(key), klona(val));
		***REMOVED***);
	***REMOVED*** else if (str === '[object Date]') ***REMOVED***
		tmp = new Date(+x);
	***REMOVED*** else if (str === '[object RegExp]') ***REMOVED***
		tmp = new RegExp(x.source, x.flags);
	***REMOVED*** else if (str === '[object DataView]') ***REMOVED***
		tmp = new x.constructor( klona(x.buffer) );
	***REMOVED*** else if (str === '[object ArrayBuffer]') ***REMOVED***
		tmp = x.slice(0);
	***REMOVED*** else if (str.slice(-6) === 'Array]') ***REMOVED***
		// ArrayBuffer.isView(x)
		// ~> `new` bcuz `Buffer.slice` => ref
		tmp = new x.constructor(x);
	***REMOVED***

	if (tmp) ***REMOVED***
		for (list=Object.getOwnPropertySymbols(x); i < list.length; i++) ***REMOVED***
			set(tmp, list[i], Object.getOwnPropertyDescriptor(x, list[i]));
		***REMOVED***

		for (i=0, list=Object.getOwnPropertyNames(x); i < list.length; i++) ***REMOVED***
			if (Object.hasOwnProperty.call(tmp, k=list[i]) && tmp[k] === x[k]) continue;
			set(tmp, k, Object.getOwnPropertyDescriptor(x, k));
		***REMOVED***
	***REMOVED***

	return tmp || x;
***REMOVED***

exports.klona = klona;