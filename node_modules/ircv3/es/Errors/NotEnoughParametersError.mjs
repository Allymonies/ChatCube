import ***REMOVED*** __extends ***REMOVED*** from "tslib";
var NotEnoughParametersError = /** @class */ (function (_super) ***REMOVED***
    __extends(NotEnoughParametersError, _super);
    function NotEnoughParametersError(_command, _expectedParams, _actualParams) ***REMOVED***
        var _this = _super.call(this, "command \"" + _command + "\" expected " + _expectedParams + " or more parameters, got " + _actualParams) || this;
        _this._command = _command;
        _this._expectedParams = _expectedParams;
        _this._actualParams = _actualParams;
        Object.setPrototypeOf(_this, NotEnoughParametersError.prototype);
        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
        if (Error.captureStackTrace) ***REMOVED***
            Error.captureStackTrace(_this, NotEnoughParametersError);
        ***REMOVED***
        return _this;
    ***REMOVED***
    Object.defineProperty(NotEnoughParametersError.prototype, "command", ***REMOVED***
        get: function () ***REMOVED***
            return this._command;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(NotEnoughParametersError.prototype, "expectedParams", ***REMOVED***
        get: function () ***REMOVED***
            return this._expectedParams;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(NotEnoughParametersError.prototype, "actualParams", ***REMOVED***
        get: function () ***REMOVED***
            return this._actualParams;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    return NotEnoughParametersError;
***REMOVED***(Error));
export ***REMOVED*** NotEnoughParametersError ***REMOVED***;
