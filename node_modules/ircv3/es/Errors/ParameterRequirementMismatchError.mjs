import ***REMOVED*** __extends ***REMOVED*** from "tslib";
var ParameterRequirementMismatchError = /** @class */ (function (_super) ***REMOVED***
    __extends(ParameterRequirementMismatchError, _super);
    function ParameterRequirementMismatchError(_command, _paramName, _paramSpec, _givenValue) ***REMOVED***
        var _a;
        var _this = _super.call(this, "required parameter \"" + _paramName + "\" did not validate against " + ((_a = _paramSpec.type) !== null && _a !== void 0 ? _a : 'regex') + " validation: \"" + _givenValue + "\"") || this;
        _this._command = _command;
        _this._paramName = _paramName;
        _this._paramSpec = _paramSpec;
        _this._givenValue = _givenValue;
        Object.setPrototypeOf(_this, ParameterRequirementMismatchError.prototype);
        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
        if (Error.captureStackTrace) ***REMOVED***
            Error.captureStackTrace(_this, ParameterRequirementMismatchError);
        ***REMOVED***
        return _this;
    ***REMOVED***
    Object.defineProperty(ParameterRequirementMismatchError.prototype, "command", ***REMOVED***
        get: function () ***REMOVED***
            return this._command;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(ParameterRequirementMismatchError.prototype, "paramName", ***REMOVED***
        get: function () ***REMOVED***
            return this._paramName;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(ParameterRequirementMismatchError.prototype, "paramSpec", ***REMOVED***
        get: function () ***REMOVED***
            return this._paramSpec;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    Object.defineProperty(ParameterRequirementMismatchError.prototype, "givenValue", ***REMOVED***
        get: function () ***REMOVED***
            return this._givenValue;
    ***REMOVED***
        enumerable: false,
        configurable: true
    ***REMOVED***);
    return ParameterRequirementMismatchError;
***REMOVED***(Error));
export ***REMOVED*** ParameterRequirementMismatchError ***REMOVED***;
