import ***REMOVED*** __decorate, __extends ***REMOVED*** from "tslib";
import ***REMOVED*** Message ***REMOVED*** from "../../Message.mjs";
import ***REMOVED*** MessageParamDefinition, MessageType ***REMOVED*** from "../../MessageDefinition.mjs";
var CapabilityNegotiation = /** @class */ (function (_super) ***REMOVED***
    __extends(CapabilityNegotiation, _super);
    function CapabilityNegotiation() ***REMOVED***
        return _super !== null && _super.apply(this, arguments) || this;
    ***REMOVED***
    CapabilityNegotiation_1 = CapabilityNegotiation;
    CapabilityNegotiation.prototype.isResponseTo = function (originalMessage) ***REMOVED***
        if (!(originalMessage instanceof CapabilityNegotiation_1)) ***REMOVED***
            return false;
        ***REMOVED***
        switch (this.params.subCommand) ***REMOVED***
            case 'ACK':
            case 'NAK': ***REMOVED***
                // trim is necessary because some networks seem to add trailing spaces (looking at you, Freenode)...
                return (originalMessage.params.subCommand === 'REQ' &&
                    originalMessage.params.capabilities === this.params.capabilities.trim());
            ***REMOVED***
            case 'LS':
            case 'LIST': ***REMOVED***
                return originalMessage.params.subCommand === this.params.subCommand;
            ***REMOVED***
            default: ***REMOVED***
                return false;
            ***REMOVED***
        ***REMOVED***
    ***REMOVED***;
    CapabilityNegotiation.prototype.endsResponseTo = function (originalMessage) ***REMOVED***
        if (!(originalMessage instanceof CapabilityNegotiation_1)) ***REMOVED***
            return false;
        ***REMOVED***
        switch (this.params.subCommand) ***REMOVED***
            case 'LS':
            case 'LIST': ***REMOVED***
                return !this.params.continued;
            ***REMOVED***
            default: ***REMOVED***
                return true;
            ***REMOVED***
        ***REMOVED***
    ***REMOVED***;
    var CapabilityNegotiation_1;
    CapabilityNegotiation.SUPPORTS_CAPTURE = true;
    __decorate([
        MessageParamDefinition(***REMOVED***
            match: /^(?:[a-z_\-\[\]\\^***REMOVED******REMOVED***|`][a-z0-9_\-\[\]\\^***REMOVED******REMOVED***|`]+|\*)$/i,
            optional: true,
            noClient: true
        ***REMOVED***)
    ], CapabilityNegotiation.prototype, "target", void 0);
    __decorate([
        MessageParamDefinition(***REMOVED***
            match: /^(?:LS|LIST|REQ|ACK|NAK|END|NEW|DEL)$/i
        ***REMOVED***)
    ], CapabilityNegotiation.prototype, "subCommand", void 0);
    __decorate([
        MessageParamDefinition(***REMOVED***
            match: /^\d+$/,
            optional: true
        ***REMOVED***)
    ], CapabilityNegotiation.prototype, "version", void 0);
    __decorate([
        MessageParamDefinition(***REMOVED***
            match: /^\*$/,
            optional: true
        ***REMOVED***)
    ], CapabilityNegotiation.prototype, "continued", void 0);
    __decorate([
        MessageParamDefinition(***REMOVED***
            trailing: true,
            optional: true
        ***REMOVED***)
    ], CapabilityNegotiation.prototype, "capabilities", void 0);
    CapabilityNegotiation = CapabilityNegotiation_1 = __decorate([
        MessageType('CAP')
    ], CapabilityNegotiation);
    return CapabilityNegotiation;
***REMOVED***(Message));
export ***REMOVED*** CapabilityNegotiation ***REMOVED***;
